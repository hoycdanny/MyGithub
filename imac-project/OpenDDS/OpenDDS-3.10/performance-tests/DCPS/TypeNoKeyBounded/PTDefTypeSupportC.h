// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_PTDEFTYPESUPPORTC_I9FQL0_H_
#define _TAO_IDL_PTDEFTYPESUPPORTC_I9FQL0_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "PTTypeLib_Export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "PTDefC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO PTTypeLib_Export

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace Xyz
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< Xyz::Pt128, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> Pt128Seq;
  

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT128TYPESUPPORT__VAR_OUT_CH_)
#define _XYZ_PT128TYPESUPPORT__VAR_OUT_CH_

  class Pt128TypeSupport;
  typedef Pt128TypeSupport *Pt128TypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt128TypeSupport
      >
    Pt128TypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt128TypeSupport
      >
    Pt128TypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt128TypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt128TypeSupport_ptr _ptr_type;
    typedef Pt128TypeSupport_var _var_type;
    typedef Pt128TypeSupport_out _out_type;

    // The static operations.
    static Pt128TypeSupport_ptr _duplicate (Pt128TypeSupport_ptr obj);

    static void _tao_release (Pt128TypeSupport_ptr obj);

    static Pt128TypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt128TypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt128TypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt128TypeSupport (void);

    

    virtual ~Pt128TypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt128TypeSupport (const Pt128TypeSupport &);

    void operator= (const Pt128TypeSupport &);
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT128DATAWRITER__VAR_OUT_CH_)
#define _XYZ_PT128DATAWRITER__VAR_OUT_CH_

  class Pt128DataWriter;
  typedef Pt128DataWriter *Pt128DataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt128DataWriter
      >
    Pt128DataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt128DataWriter
      >
    Pt128DataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt128DataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt128DataWriter_ptr _ptr_type;
    typedef Pt128DataWriter_var _var_type;
    typedef Pt128DataWriter_out _out_type;

    // The static operations.
    static Pt128DataWriter_ptr _duplicate (Pt128DataWriter_ptr obj);

    static void _tao_release (Pt128DataWriter_ptr obj);

    static Pt128DataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt128DataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt128DataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::Xyz::Pt128 & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::Xyz::Pt128 & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::Xyz::Pt128 & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::Xyz::Pt128 & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::Xyz::Pt128 & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::Xyz::Pt128 & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::Xyz::Pt128 & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::Xyz::Pt128 & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Xyz::Pt128 & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Xyz::Pt128 & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt128DataWriter (void);

    

    virtual ~Pt128DataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt128DataWriter (const Pt128DataWriter &);

    void operator= (const Pt128DataWriter &);
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT128DATAREADER__VAR_OUT_CH_)
#define _XYZ_PT128DATAREADER__VAR_OUT_CH_

  class Pt128DataReader;
  typedef Pt128DataReader *Pt128DataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt128DataReader
      >
    Pt128DataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt128DataReader
      >
    Pt128DataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt128DataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt128DataReader_ptr _ptr_type;
    typedef Pt128DataReader_var _var_type;
    typedef Pt128DataReader_out _out_type;

    // The static operations.
    static Pt128DataReader_ptr _duplicate (Pt128DataReader_ptr obj);

    static void _tao_release (Pt128DataReader_ptr obj);

    static Pt128DataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt128DataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt128DataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::Xyz::Pt128Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::Xyz::Pt128Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::Xyz::Pt128Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::Xyz::Pt128Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::Xyz::Pt128 & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::Xyz::Pt128 & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::Xyz::Pt128Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::Xyz::Pt128Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::Xyz::Pt128Seq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::Xyz::Pt128Seq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::Xyz::Pt128Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::Xyz::Pt128Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::Xyz::Pt128Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::Xyz::Pt128Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::Xyz::Pt128Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Xyz::Pt128 & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Xyz::Pt128 & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt128DataReader (void);

    

    virtual ~Pt128DataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt128DataReader (const Pt128DataReader &);

    void operator= (const Pt128DataReader &);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module Xyz

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace Xyz
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< Xyz::Pt512, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> Pt512Seq;
  

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT512TYPESUPPORT__VAR_OUT_CH_)
#define _XYZ_PT512TYPESUPPORT__VAR_OUT_CH_

  class Pt512TypeSupport;
  typedef Pt512TypeSupport *Pt512TypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt512TypeSupport
      >
    Pt512TypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt512TypeSupport
      >
    Pt512TypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt512TypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt512TypeSupport_ptr _ptr_type;
    typedef Pt512TypeSupport_var _var_type;
    typedef Pt512TypeSupport_out _out_type;

    // The static operations.
    static Pt512TypeSupport_ptr _duplicate (Pt512TypeSupport_ptr obj);

    static void _tao_release (Pt512TypeSupport_ptr obj);

    static Pt512TypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt512TypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt512TypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt512TypeSupport (void);

    

    virtual ~Pt512TypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt512TypeSupport (const Pt512TypeSupport &);

    void operator= (const Pt512TypeSupport &);
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT512DATAWRITER__VAR_OUT_CH_)
#define _XYZ_PT512DATAWRITER__VAR_OUT_CH_

  class Pt512DataWriter;
  typedef Pt512DataWriter *Pt512DataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt512DataWriter
      >
    Pt512DataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt512DataWriter
      >
    Pt512DataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt512DataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt512DataWriter_ptr _ptr_type;
    typedef Pt512DataWriter_var _var_type;
    typedef Pt512DataWriter_out _out_type;

    // The static operations.
    static Pt512DataWriter_ptr _duplicate (Pt512DataWriter_ptr obj);

    static void _tao_release (Pt512DataWriter_ptr obj);

    static Pt512DataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt512DataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt512DataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::Xyz::Pt512 & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::Xyz::Pt512 & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::Xyz::Pt512 & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::Xyz::Pt512 & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::Xyz::Pt512 & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::Xyz::Pt512 & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::Xyz::Pt512 & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::Xyz::Pt512 & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Xyz::Pt512 & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Xyz::Pt512 & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt512DataWriter (void);

    

    virtual ~Pt512DataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt512DataWriter (const Pt512DataWriter &);

    void operator= (const Pt512DataWriter &);
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT512DATAREADER__VAR_OUT_CH_)
#define _XYZ_PT512DATAREADER__VAR_OUT_CH_

  class Pt512DataReader;
  typedef Pt512DataReader *Pt512DataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt512DataReader
      >
    Pt512DataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt512DataReader
      >
    Pt512DataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt512DataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt512DataReader_ptr _ptr_type;
    typedef Pt512DataReader_var _var_type;
    typedef Pt512DataReader_out _out_type;

    // The static operations.
    static Pt512DataReader_ptr _duplicate (Pt512DataReader_ptr obj);

    static void _tao_release (Pt512DataReader_ptr obj);

    static Pt512DataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt512DataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt512DataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::Xyz::Pt512Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::Xyz::Pt512Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::Xyz::Pt512Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::Xyz::Pt512Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::Xyz::Pt512 & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::Xyz::Pt512 & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::Xyz::Pt512Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::Xyz::Pt512Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::Xyz::Pt512Seq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::Xyz::Pt512Seq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::Xyz::Pt512Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::Xyz::Pt512Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::Xyz::Pt512Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::Xyz::Pt512Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::Xyz::Pt512Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Xyz::Pt512 & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Xyz::Pt512 & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt512DataReader (void);

    

    virtual ~Pt512DataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt512DataReader (const Pt512DataReader &);

    void operator= (const Pt512DataReader &);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module Xyz

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace Xyz
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< Xyz::Pt2048, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> Pt2048Seq;
  

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT2048TYPESUPPORT__VAR_OUT_CH_)
#define _XYZ_PT2048TYPESUPPORT__VAR_OUT_CH_

  class Pt2048TypeSupport;
  typedef Pt2048TypeSupport *Pt2048TypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt2048TypeSupport
      >
    Pt2048TypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt2048TypeSupport
      >
    Pt2048TypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt2048TypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt2048TypeSupport_ptr _ptr_type;
    typedef Pt2048TypeSupport_var _var_type;
    typedef Pt2048TypeSupport_out _out_type;

    // The static operations.
    static Pt2048TypeSupport_ptr _duplicate (Pt2048TypeSupport_ptr obj);

    static void _tao_release (Pt2048TypeSupport_ptr obj);

    static Pt2048TypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt2048TypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt2048TypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt2048TypeSupport (void);

    

    virtual ~Pt2048TypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt2048TypeSupport (const Pt2048TypeSupport &);

    void operator= (const Pt2048TypeSupport &);
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT2048DATAWRITER__VAR_OUT_CH_)
#define _XYZ_PT2048DATAWRITER__VAR_OUT_CH_

  class Pt2048DataWriter;
  typedef Pt2048DataWriter *Pt2048DataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt2048DataWriter
      >
    Pt2048DataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt2048DataWriter
      >
    Pt2048DataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt2048DataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt2048DataWriter_ptr _ptr_type;
    typedef Pt2048DataWriter_var _var_type;
    typedef Pt2048DataWriter_out _out_type;

    // The static operations.
    static Pt2048DataWriter_ptr _duplicate (Pt2048DataWriter_ptr obj);

    static void _tao_release (Pt2048DataWriter_ptr obj);

    static Pt2048DataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt2048DataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt2048DataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::Xyz::Pt2048 & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::Xyz::Pt2048 & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::Xyz::Pt2048 & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::Xyz::Pt2048 & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::Xyz::Pt2048 & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::Xyz::Pt2048 & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::Xyz::Pt2048 & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::Xyz::Pt2048 & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Xyz::Pt2048 & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Xyz::Pt2048 & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt2048DataWriter (void);

    

    virtual ~Pt2048DataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt2048DataWriter (const Pt2048DataWriter &);

    void operator= (const Pt2048DataWriter &);
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT2048DATAREADER__VAR_OUT_CH_)
#define _XYZ_PT2048DATAREADER__VAR_OUT_CH_

  class Pt2048DataReader;
  typedef Pt2048DataReader *Pt2048DataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt2048DataReader
      >
    Pt2048DataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt2048DataReader
      >
    Pt2048DataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt2048DataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt2048DataReader_ptr _ptr_type;
    typedef Pt2048DataReader_var _var_type;
    typedef Pt2048DataReader_out _out_type;

    // The static operations.
    static Pt2048DataReader_ptr _duplicate (Pt2048DataReader_ptr obj);

    static void _tao_release (Pt2048DataReader_ptr obj);

    static Pt2048DataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt2048DataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt2048DataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::Xyz::Pt2048Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::Xyz::Pt2048Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::Xyz::Pt2048Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::Xyz::Pt2048Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::Xyz::Pt2048 & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::Xyz::Pt2048 & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::Xyz::Pt2048Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::Xyz::Pt2048Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::Xyz::Pt2048Seq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::Xyz::Pt2048Seq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::Xyz::Pt2048Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::Xyz::Pt2048Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::Xyz::Pt2048Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::Xyz::Pt2048Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::Xyz::Pt2048Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Xyz::Pt2048 & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Xyz::Pt2048 & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt2048DataReader (void);

    

    virtual ~Pt2048DataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt2048DataReader (const Pt2048DataReader &);

    void operator= (const Pt2048DataReader &);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module Xyz

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace Xyz
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

  typedef ::TAO::DCPS::ZeroCopyDataSeq< Xyz::Pt8192, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> Pt8192Seq;
  

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT8192TYPESUPPORT__VAR_OUT_CH_)
#define _XYZ_PT8192TYPESUPPORT__VAR_OUT_CH_

  class Pt8192TypeSupport;
  typedef Pt8192TypeSupport *Pt8192TypeSupport_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt8192TypeSupport
      >
    Pt8192TypeSupport_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt8192TypeSupport
      >
    Pt8192TypeSupport_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt8192TypeSupport
    : public virtual ::OpenDDS::DCPS::TypeSupport
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt8192TypeSupport_ptr _ptr_type;
    typedef Pt8192TypeSupport_var _var_type;
    typedef Pt8192TypeSupport_out _out_type;

    // The static operations.
    static Pt8192TypeSupport_ptr _duplicate (Pt8192TypeSupport_ptr obj);

    static void _tao_release (Pt8192TypeSupport_ptr obj);

    static Pt8192TypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt8192TypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt8192TypeSupport_ptr _nil (void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt8192TypeSupport (void);

    

    virtual ~Pt8192TypeSupport (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt8192TypeSupport (const Pt8192TypeSupport &);

    void operator= (const Pt8192TypeSupport &);
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT8192DATAWRITER__VAR_OUT_CH_)
#define _XYZ_PT8192DATAWRITER__VAR_OUT_CH_

  class Pt8192DataWriter;
  typedef Pt8192DataWriter *Pt8192DataWriter_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt8192DataWriter
      >
    Pt8192DataWriter_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt8192DataWriter
      >
    Pt8192DataWriter_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt8192DataWriter
    : public virtual ::DDS::DataWriter
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt8192DataWriter_ptr _ptr_type;
    typedef Pt8192DataWriter_var _var_type;
    typedef Pt8192DataWriter_out _out_type;

    // The static operations.
    static Pt8192DataWriter_ptr _duplicate (Pt8192DataWriter_ptr obj);

    static void _tao_release (Pt8192DataWriter_ptr obj);

    static Pt8192DataWriter_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt8192DataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt8192DataWriter_ptr _nil (void);

    virtual ::DDS::InstanceHandle_t register_instance (
      const ::Xyz::Pt8192 & instance) = 0;

    virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
      const ::Xyz::Pt8192 & instance,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance (
      const ::Xyz::Pt8192 & instance,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
      const ::Xyz::Pt8192 & instance,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & timestamp) = 0;

    virtual ::DDS::ReturnCode_t write (
      const ::Xyz::Pt8192 & instance_data,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::ReturnCode_t write_w_timestamp (
      const ::Xyz::Pt8192 & instance_data,
      ::DDS::InstanceHandle_t handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t dispose (
      const ::Xyz::Pt8192 & instance_data,
      ::DDS::InstanceHandle_t instance_handle) = 0;

    virtual ::DDS::ReturnCode_t dispose_w_timestamp (
      const ::Xyz::Pt8192 & instance_data,
      ::DDS::InstanceHandle_t instance_handle,
      const ::DDS::Time_t & source_timestamp) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Xyz::Pt8192 & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Xyz::Pt8192 & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt8192DataWriter (void);

    

    virtual ~Pt8192DataWriter (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt8192DataWriter (const Pt8192DataWriter &);

    void operator= (const Pt8192DataWriter &);
  };

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_XYZ_PT8192DATAREADER__VAR_OUT_CH_)
#define _XYZ_PT8192DATAREADER__VAR_OUT_CH_

  class Pt8192DataReader;
  typedef Pt8192DataReader *Pt8192DataReader_ptr;

  typedef
    TAO_Objref_Var_T<
        Pt8192DataReader
      >
    Pt8192DataReader_var;
  
  typedef
    TAO_Objref_Out_T<
        Pt8192DataReader
      >
    Pt8192DataReader_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class PTTypeLib_Export Pt8192DataReader
    : public virtual ::OpenDDS::DCPS::DataReaderEx
  
  {
  public:

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Pt8192DataReader_ptr _ptr_type;
    typedef Pt8192DataReader_var _var_type;
    typedef Pt8192DataReader_out _out_type;

    // The static operations.
    static Pt8192DataReader_ptr _duplicate (Pt8192DataReader_ptr obj);

    static void _tao_release (Pt8192DataReader_ptr obj);

    static Pt8192DataReader_ptr _narrow (::CORBA::Object_ptr obj);
    static Pt8192DataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Pt8192DataReader_ptr _nil (void);

    virtual ::DDS::ReturnCode_t read (
      ::Xyz::Pt8192Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take (
      ::Xyz::Pt8192Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_w_condition (
      ::Xyz::Pt8192Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_w_condition (
      ::Xyz::Pt8192Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_sample (
      ::Xyz::Pt8192 & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t take_next_sample (
      ::Xyz::Pt8192 & received_data,
      ::DDS::SampleInfo & sample_info) = 0;

    virtual ::DDS::ReturnCode_t read_instance (
      ::Xyz::Pt8192Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_instance (
      ::Xyz::Pt8192Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_instance_w_condition (
      ::Xyz::Pt8192Seq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_instance_w_condition (
      ::Xyz::Pt8192Seq & received_data,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance (
      ::Xyz::Pt8192Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance (
      ::Xyz::Pt8192Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t a_handle,
      ::DDS::SampleStateMask sample_states,
      ::DDS::ViewStateMask view_states,
      ::DDS::InstanceStateMask instance_states) = 0;

    virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
      ::Xyz::Pt8192Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
      ::Xyz::Pt8192Seq & data_values,
      ::DDS::SampleInfoSeq & sample_infos,
      ::CORBA::Long max_samples,
      ::DDS::InstanceHandle_t previous_handle,
      ::DDS::ReadCondition_ptr a_condition) = 0;

    virtual ::DDS::ReturnCode_t return_loan (
      ::Xyz::Pt8192Seq & received_data,
      ::DDS::SampleInfoSeq & info_seq) = 0;

    virtual ::DDS::ReturnCode_t get_key_value (
      ::Xyz::Pt8192 & key_holder,
      ::DDS::InstanceHandle_t handle) = 0;

    virtual ::DDS::InstanceHandle_t lookup_instance (
      const ::Xyz::Pt8192 & instance_data) = 0;

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Abstract or local interface only.
    Pt8192DataReader (void);

    

    virtual ~Pt8192DataReader (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Pt8192DataReader (const Pt8192DataReader &);

    void operator= (const Pt8192DataReader &);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module Xyz

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_XYZ_PT128TYPESUPPORT__TRAITS_)
#define _XYZ_PT128TYPESUPPORT__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt128TypeSupport>
  {
    static ::Xyz::Pt128TypeSupport_ptr duplicate (
        ::Xyz::Pt128TypeSupport_ptr p);
    static void release (
        ::Xyz::Pt128TypeSupport_ptr p);
    static ::Xyz::Pt128TypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt128TypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT128DATAWRITER__TRAITS_)
#define _XYZ_PT128DATAWRITER__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt128DataWriter>
  {
    static ::Xyz::Pt128DataWriter_ptr duplicate (
        ::Xyz::Pt128DataWriter_ptr p);
    static void release (
        ::Xyz::Pt128DataWriter_ptr p);
    static ::Xyz::Pt128DataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt128DataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT128DATAREADER__TRAITS_)
#define _XYZ_PT128DATAREADER__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt128DataReader>
  {
    static ::Xyz::Pt128DataReader_ptr duplicate (
        ::Xyz::Pt128DataReader_ptr p);
    static void release (
        ::Xyz::Pt128DataReader_ptr p);
    static ::Xyz::Pt128DataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt128DataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT512TYPESUPPORT__TRAITS_)
#define _XYZ_PT512TYPESUPPORT__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt512TypeSupport>
  {
    static ::Xyz::Pt512TypeSupport_ptr duplicate (
        ::Xyz::Pt512TypeSupport_ptr p);
    static void release (
        ::Xyz::Pt512TypeSupport_ptr p);
    static ::Xyz::Pt512TypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt512TypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT512DATAWRITER__TRAITS_)
#define _XYZ_PT512DATAWRITER__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt512DataWriter>
  {
    static ::Xyz::Pt512DataWriter_ptr duplicate (
        ::Xyz::Pt512DataWriter_ptr p);
    static void release (
        ::Xyz::Pt512DataWriter_ptr p);
    static ::Xyz::Pt512DataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt512DataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT512DATAREADER__TRAITS_)
#define _XYZ_PT512DATAREADER__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt512DataReader>
  {
    static ::Xyz::Pt512DataReader_ptr duplicate (
        ::Xyz::Pt512DataReader_ptr p);
    static void release (
        ::Xyz::Pt512DataReader_ptr p);
    static ::Xyz::Pt512DataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt512DataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT2048TYPESUPPORT__TRAITS_)
#define _XYZ_PT2048TYPESUPPORT__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt2048TypeSupport>
  {
    static ::Xyz::Pt2048TypeSupport_ptr duplicate (
        ::Xyz::Pt2048TypeSupport_ptr p);
    static void release (
        ::Xyz::Pt2048TypeSupport_ptr p);
    static ::Xyz::Pt2048TypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt2048TypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT2048DATAWRITER__TRAITS_)
#define _XYZ_PT2048DATAWRITER__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt2048DataWriter>
  {
    static ::Xyz::Pt2048DataWriter_ptr duplicate (
        ::Xyz::Pt2048DataWriter_ptr p);
    static void release (
        ::Xyz::Pt2048DataWriter_ptr p);
    static ::Xyz::Pt2048DataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt2048DataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT2048DATAREADER__TRAITS_)
#define _XYZ_PT2048DATAREADER__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt2048DataReader>
  {
    static ::Xyz::Pt2048DataReader_ptr duplicate (
        ::Xyz::Pt2048DataReader_ptr p);
    static void release (
        ::Xyz::Pt2048DataReader_ptr p);
    static ::Xyz::Pt2048DataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt2048DataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT8192TYPESUPPORT__TRAITS_)
#define _XYZ_PT8192TYPESUPPORT__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt8192TypeSupport>
  {
    static ::Xyz::Pt8192TypeSupport_ptr duplicate (
        ::Xyz::Pt8192TypeSupport_ptr p);
    static void release (
        ::Xyz::Pt8192TypeSupport_ptr p);
    static ::Xyz::Pt8192TypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt8192TypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT8192DATAWRITER__TRAITS_)
#define _XYZ_PT8192DATAWRITER__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt8192DataWriter>
  {
    static ::Xyz::Pt8192DataWriter_ptr duplicate (
        ::Xyz::Pt8192DataWriter_ptr p);
    static void release (
        ::Xyz::Pt8192DataWriter_ptr p);
    static ::Xyz::Pt8192DataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt8192DataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_XYZ_PT8192DATAREADER__TRAITS_)
#define _XYZ_PT8192DATAREADER__TRAITS_

  template<>
  struct PTTypeLib_Export Objref_Traits< ::Xyz::Pt8192DataReader>
  {
    static ::Xyz::Pt8192DataReader_ptr duplicate (
        ::Xyz::Pt8192DataReader_ptr p);
    static void release (
        ::Xyz::Pt8192DataReader_ptr p);
    static ::Xyz::Pt8192DataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Xyz::Pt8192DataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "PTDefTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

