// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_PTDEFC_KUVVMC_H_
#define _TAO_IDL_PTDEFC_KUVVMC_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "PTTypeLib_Export.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO PTTypeLib_Export

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace Xyz
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_XYZ_FLT128SEQ_CH_)
#define _XYZ_FLT128SEQ_CH_

  class Flt128Seq;

  typedef
    ::TAO_FixedSeq_Var_T<
        Flt128Seq
      >
    Flt128Seq_var;

  typedef
    ::TAO_Seq_Out_T<
        Flt128Seq
      >
    Flt128Seq_out;

  class PTTypeLib_Export Flt128Seq
    : public
        ::TAO::bounded_value_sequence<
            ::CORBA::Float,
            128
          >
  {
  public:
    Flt128Seq (void);
    Flt128Seq (
      ::CORBA::ULong length,
      ::CORBA::Float* buffer,
      ::CORBA::Boolean release = false);
    Flt128Seq (const Flt128Seq &);
    virtual ~Flt128Seq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Flt128Seq_var _var_type;
    typedef Flt128Seq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct Pt128;

  typedef
    ::TAO_Var_Var_T<
        Pt128
      >
    Pt128_var;

  typedef
    ::TAO_Out_T<
        Pt128
      >
    Pt128_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct PTTypeLib_Export Pt128
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Pt128_var _var_type;
    typedef Pt128_out _out_type;
    
    ::CORBA::Long data_source;
    ::CORBA::Long sequence_num;
    Xyz::Flt128Seq values;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_XYZ_FLT512SEQ_CH_)
#define _XYZ_FLT512SEQ_CH_

  class Flt512Seq;

  typedef
    ::TAO_FixedSeq_Var_T<
        Flt512Seq
      >
    Flt512Seq_var;

  typedef
    ::TAO_Seq_Out_T<
        Flt512Seq
      >
    Flt512Seq_out;

  class PTTypeLib_Export Flt512Seq
    : public
        ::TAO::bounded_value_sequence<
            ::CORBA::Float,
            512
          >
  {
  public:
    Flt512Seq (void);
    Flt512Seq (
      ::CORBA::ULong length,
      ::CORBA::Float* buffer,
      ::CORBA::Boolean release = false);
    Flt512Seq (const Flt512Seq &);
    virtual ~Flt512Seq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Flt512Seq_var _var_type;
    typedef Flt512Seq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct Pt512;

  typedef
    ::TAO_Var_Var_T<
        Pt512
      >
    Pt512_var;

  typedef
    ::TAO_Out_T<
        Pt512
      >
    Pt512_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct PTTypeLib_Export Pt512
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Pt512_var _var_type;
    typedef Pt512_out _out_type;
    
    ::CORBA::Long data_source;
    ::CORBA::Long sequence_num;
    Xyz::Flt512Seq values;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_XYZ_FLT2048SEQ_CH_)
#define _XYZ_FLT2048SEQ_CH_

  class Flt2048Seq;

  typedef
    ::TAO_FixedSeq_Var_T<
        Flt2048Seq
      >
    Flt2048Seq_var;

  typedef
    ::TAO_Seq_Out_T<
        Flt2048Seq
      >
    Flt2048Seq_out;

  class PTTypeLib_Export Flt2048Seq
    : public
        ::TAO::bounded_value_sequence<
            ::CORBA::Float,
            2048
          >
  {
  public:
    Flt2048Seq (void);
    Flt2048Seq (
      ::CORBA::ULong length,
      ::CORBA::Float* buffer,
      ::CORBA::Boolean release = false);
    Flt2048Seq (const Flt2048Seq &);
    virtual ~Flt2048Seq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Flt2048Seq_var _var_type;
    typedef Flt2048Seq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct Pt2048;

  typedef
    ::TAO_Var_Var_T<
        Pt2048
      >
    Pt2048_var;

  typedef
    ::TAO_Out_T<
        Pt2048
      >
    Pt2048_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct PTTypeLib_Export Pt2048
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Pt2048_var _var_type;
    typedef Pt2048_out _out_type;
    
    ::CORBA::Long data_source;
    ::CORBA::Long sequence_num;
    Xyz::Flt2048Seq values;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_XYZ_FLT8192SEQ_CH_)
#define _XYZ_FLT8192SEQ_CH_

  class Flt8192Seq;

  typedef
    ::TAO_FixedSeq_Var_T<
        Flt8192Seq
      >
    Flt8192Seq_var;

  typedef
    ::TAO_Seq_Out_T<
        Flt8192Seq
      >
    Flt8192Seq_out;

  class PTTypeLib_Export Flt8192Seq
    : public
        ::TAO::bounded_value_sequence<
            ::CORBA::Float,
            8192
          >
  {
  public:
    Flt8192Seq (void);
    Flt8192Seq (
      ::CORBA::ULong length,
      ::CORBA::Float* buffer,
      ::CORBA::Boolean release = false);
    Flt8192Seq (const Flt8192Seq &);
    virtual ~Flt8192Seq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Flt8192Seq_var _var_type;
    typedef Flt8192Seq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct Pt8192;

  typedef
    ::TAO_Var_Var_T<
        Pt8192
      >
    Pt8192_var;

  typedef
    ::TAO_Out_T<
        Pt8192
      >
    Pt8192_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct PTTypeLib_Export Pt8192
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Pt8192_var _var_type;
    typedef Pt8192_out _out_type;
    
    ::CORBA::Long data_source;
    ::CORBA::Long sequence_num;
    Xyz::Flt8192Seq values;
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module Xyz

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Xyz::Flt128Seq>
    : public
        Var_Size_Arg_Traits_T<
            ::Xyz::Flt128Seq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Xyz::Pt128>
    : public
        Var_Size_Arg_Traits_T<
            ::Xyz::Pt128,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Xyz::Flt512Seq>
    : public
        Var_Size_Arg_Traits_T<
            ::Xyz::Flt512Seq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Xyz::Pt512>
    : public
        Var_Size_Arg_Traits_T<
            ::Xyz::Pt512,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Xyz::Flt2048Seq>
    : public
        Var_Size_Arg_Traits_T<
            ::Xyz::Flt2048Seq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Xyz::Pt2048>
    : public
        Var_Size_Arg_Traits_T<
            ::Xyz::Pt2048,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Xyz::Flt8192Seq>
    : public
        Var_Size_Arg_Traits_T<
            ::Xyz::Flt8192Seq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Xyz::Pt8192>
    : public
        Var_Size_Arg_Traits_T<
            ::Xyz::Pt8192,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Xyz_Flt128Seq_H_
#define _TAO_CDR_OP_Xyz_Flt128Seq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


PTTypeLib_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::Flt128Seq &_tao_sequence);
PTTypeLib_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::Flt128Seq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Xyz_Flt128Seq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

PTTypeLib_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Xyz::Pt128 &);
PTTypeLib_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Xyz::Pt128 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Xyz_Flt512Seq_H_
#define _TAO_CDR_OP_Xyz_Flt512Seq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


PTTypeLib_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::Flt512Seq &_tao_sequence);
PTTypeLib_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::Flt512Seq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Xyz_Flt512Seq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

PTTypeLib_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Xyz::Pt512 &);
PTTypeLib_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Xyz::Pt512 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Xyz_Flt2048Seq_H_
#define _TAO_CDR_OP_Xyz_Flt2048Seq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


PTTypeLib_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::Flt2048Seq &_tao_sequence);
PTTypeLib_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::Flt2048Seq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Xyz_Flt2048Seq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

PTTypeLib_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Xyz::Pt2048 &);
PTTypeLib_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Xyz::Pt2048 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Xyz_Flt8192Seq_H_
#define _TAO_CDR_OP_Xyz_Flt8192Seq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


PTTypeLib_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::Flt8192Seq &_tao_sequence);
PTTypeLib_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::Flt8192Seq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Xyz_Flt8192Seq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

PTTypeLib_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Xyz::Pt8192 &);
PTTypeLib_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Xyz::Pt8192 &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "PTDefC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

