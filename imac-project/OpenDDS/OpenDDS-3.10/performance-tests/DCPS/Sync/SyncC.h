// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_SYNCC_6OFD2I_H_
#define _TAO_IDL_SYNCC_6OFD2I_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "Sync_export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "tao/Object.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/Object_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO Sync_Export

// TAO_IDL - Generated from
// be/be_visitor_root/root_ch.cpp:160
TAO_BEGIN_VERSIONED_NAMESPACE_DECL



namespace TAO
{
  template<typename T> class Narrow_Utils;
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace Sync
{

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_SYNC_CLIENT__VAR_OUT_CH_)
#define _SYNC_CLIENT__VAR_OUT_CH_

  class Client;
  typedef Client *Client_ptr;

  typedef
    TAO_Objref_Var_T<
        Client
      >
    Client_var;
  
  typedef
    TAO_Objref_Out_T<
        Client
      >
    Client_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:47

  enum Role
  {
    Pub,
    Sub
  };

  typedef Role &Role_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:373

  typedef ::CORBA::Long Id;
  typedef ::CORBA::Long_out Id_out;

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:373

  typedef ::CORBA::Long WayPoint;
  typedef ::CORBA::Long_out WayPoint_out;

  // TAO_IDL - Generated from
  // be/be_interface.cpp:751

#if !defined (_SYNC_SERVER__VAR_OUT_CH_)
#define _SYNC_SERVER__VAR_OUT_CH_

  class Server;
  typedef Server *Server_ptr;

  typedef
    TAO_Objref_Var_T<
        Server
      >
    Server_var;
  
  typedef
    TAO_Objref_Out_T<
        Server
      >
    Server_out;

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class Sync_Export Server
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Server>;

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Server_ptr _ptr_type;
    typedef Server_var _var_type;
    typedef Server_out _out_type;

    // The static operations.
    static Server_ptr _duplicate (Server_ptr obj);

    static void _tao_release (Server_ptr obj);

    static Server_ptr _narrow (::CORBA::Object_ptr obj);
    static Server_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Server_ptr _nil (void);

    virtual void register_me (
      ::Sync::Role rol,
      ::Sync::Client_ptr callback,
      ::Sync::Id_out ide);

    virtual void unregister (
      ::Sync::Id ide);

    virtual void way_point_reached (
      ::Sync::Id ide,
      ::Sync::WayPoint way_point);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    Server (void);

    // Concrete non-local interface only.
    Server (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Server (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Server (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Server (const Server &);

    void operator= (const Server &);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_interface/interface_ch.cpp:43

  class Sync_Export Client
    : public virtual ::CORBA::Object
  {
  public:
    friend class TAO::Narrow_Utils<Client>;

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    typedef Client_ptr _ptr_type;
    typedef Client_var _var_type;
    typedef Client_out _out_type;

    // The static operations.
    static Client_ptr _duplicate (Client_ptr obj);

    static void _tao_release (Client_ptr obj);

    static Client_ptr _narrow (::CORBA::Object_ptr obj);
    static Client_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
    static Client_ptr _nil (void);

    virtual void proceed (
      void);

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:140

    virtual ::CORBA::Boolean _is_a (const char *type_id);
    virtual const char* _interface_repository_id (void) const;
    virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
  
  protected:
    // Concrete interface only.
    Client (void);

    // Concrete non-local interface only.
    Client (
        ::IOP::IOR *ior,
        TAO_ORB_Core *orb_core);
    
    // Non-local interface only.
    Client (
        TAO_Stub *objref,
        ::CORBA::Boolean _tao_collocated = false,
        TAO_Abstract_ServantBase *servant = 0,
        TAO_ORB_Core *orb_core = 0);

    virtual ~Client (void);
  
  private:
    // Private and unimplemented for concrete interfaces.
    Client (const Client &);

    void operator= (const Client &);
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module Sync

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_SYNC_CLIENT__ARG_TRAITS_)
#define _SYNC_CLIENT__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Sync::Client>
    : public
        Object_Arg_Traits_T<
            ::Sync::Client_ptr,
            ::Sync::Client_var,
            ::Sync::Client_out,
            TAO::Objref_Traits<Sync::Client>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::Sync::Role>
    : public
        Basic_Arg_Traits_T<
            ::Sync::Role,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:147

#if !defined (_SYNC_SERVER__ARG_TRAITS_)
#define _SYNC_SERVER__ARG_TRAITS_

  template<>
  class  Arg_Traits< ::Sync::Server>
    : public
        Object_Arg_Traits_T<
            ::Sync::Server_ptr,
            ::Sync::Server_var,
            ::Sync::Server_out,
            TAO::Objref_Traits<Sync::Server>,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

#endif /* end #if !defined */
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_SYNC_SERVER__TRAITS_)
#define _SYNC_SERVER__TRAITS_

  template<>
  struct Sync_Export Objref_Traits< ::Sync::Server>
  {
    static ::Sync::Server_ptr duplicate (
        ::Sync::Server_ptr p);
    static void release (
        ::Sync::Server_ptr p);
    static ::Sync::Server_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Sync::Server_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_SYNC_CLIENT__TRAITS_)
#define _SYNC_CLIENT__TRAITS_

  template<>
  struct Sync_Export Objref_Traits< ::Sync::Client>
  {
    static ::Sync::Client_ptr duplicate (
        ::Sync::Client_ptr p);
    static void release (
        ::Sync::Client_ptr p);
    static ::Sync::Client_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::Sync::Client_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Sync_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Sync::Role _tao_enumerator);
Sync_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Sync::Role &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Sync_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Sync::Server_ptr );
Sync_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Sync::Server_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/cdr_op_ch.cpp:44

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

Sync_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Sync::Client_ptr );
Sync_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Sync::Client_ptr &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "SyncC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

