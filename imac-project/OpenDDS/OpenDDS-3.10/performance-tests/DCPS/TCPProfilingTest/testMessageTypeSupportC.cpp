// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "testMessageTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "testMessageTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for profilingTest::testMsgTypeSupport.

profilingTest::testMsgTypeSupport_ptr
TAO::Objref_Traits<profilingTest::testMsgTypeSupport>::duplicate (
    profilingTest::testMsgTypeSupport_ptr p)
{
  return profilingTest::testMsgTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<profilingTest::testMsgTypeSupport>::release (
    profilingTest::testMsgTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

profilingTest::testMsgTypeSupport_ptr
TAO::Objref_Traits<profilingTest::testMsgTypeSupport>::nil (void)
{
  return profilingTest::testMsgTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<profilingTest::testMsgTypeSupport>::marshal (
    const profilingTest::testMsgTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

profilingTest::testMsgTypeSupport::testMsgTypeSupport (void)
{}

profilingTest::testMsgTypeSupport::~testMsgTypeSupport (void)
{
}

profilingTest::testMsgTypeSupport_ptr
profilingTest::testMsgTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return testMsgTypeSupport::_duplicate (
      dynamic_cast<testMsgTypeSupport_ptr> (_tao_objref)
    );
}

profilingTest::testMsgTypeSupport_ptr
profilingTest::testMsgTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return testMsgTypeSupport::_duplicate (
      dynamic_cast<testMsgTypeSupport_ptr> (_tao_objref)
    );
}

profilingTest::testMsgTypeSupport_ptr
profilingTest::testMsgTypeSupport::_nil (void)
{
  return 0;
}

profilingTest::testMsgTypeSupport_ptr
profilingTest::testMsgTypeSupport::_duplicate (testMsgTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
profilingTest::testMsgTypeSupport::_tao_release (testMsgTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
profilingTest::testMsgTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:profilingTest/testMsgTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* profilingTest::testMsgTypeSupport::_interface_repository_id (void) const
{
  return "IDL:profilingTest/testMsgTypeSupport:1.0";
}

::CORBA::Boolean
profilingTest::testMsgTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for profilingTest::testMsgDataWriter.

profilingTest::testMsgDataWriter_ptr
TAO::Objref_Traits<profilingTest::testMsgDataWriter>::duplicate (
    profilingTest::testMsgDataWriter_ptr p)
{
  return profilingTest::testMsgDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<profilingTest::testMsgDataWriter>::release (
    profilingTest::testMsgDataWriter_ptr p)
{
  ::CORBA::release (p);
}

profilingTest::testMsgDataWriter_ptr
TAO::Objref_Traits<profilingTest::testMsgDataWriter>::nil (void)
{
  return profilingTest::testMsgDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<profilingTest::testMsgDataWriter>::marshal (
    const profilingTest::testMsgDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

profilingTest::testMsgDataWriter::testMsgDataWriter (void)
{}

profilingTest::testMsgDataWriter::~testMsgDataWriter (void)
{
}

profilingTest::testMsgDataWriter_ptr
profilingTest::testMsgDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return testMsgDataWriter::_duplicate (
      dynamic_cast<testMsgDataWriter_ptr> (_tao_objref)
    );
}

profilingTest::testMsgDataWriter_ptr
profilingTest::testMsgDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return testMsgDataWriter::_duplicate (
      dynamic_cast<testMsgDataWriter_ptr> (_tao_objref)
    );
}

profilingTest::testMsgDataWriter_ptr
profilingTest::testMsgDataWriter::_nil (void)
{
  return 0;
}

profilingTest::testMsgDataWriter_ptr
profilingTest::testMsgDataWriter::_duplicate (testMsgDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
profilingTest::testMsgDataWriter::_tao_release (testMsgDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
profilingTest::testMsgDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:profilingTest/testMsgDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* profilingTest::testMsgDataWriter::_interface_repository_id (void) const
{
  return "IDL:profilingTest/testMsgDataWriter:1.0";
}

::CORBA::Boolean
profilingTest::testMsgDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for profilingTest::testMsgDataReader.

profilingTest::testMsgDataReader_ptr
TAO::Objref_Traits<profilingTest::testMsgDataReader>::duplicate (
    profilingTest::testMsgDataReader_ptr p)
{
  return profilingTest::testMsgDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<profilingTest::testMsgDataReader>::release (
    profilingTest::testMsgDataReader_ptr p)
{
  ::CORBA::release (p);
}

profilingTest::testMsgDataReader_ptr
TAO::Objref_Traits<profilingTest::testMsgDataReader>::nil (void)
{
  return profilingTest::testMsgDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<profilingTest::testMsgDataReader>::marshal (
    const profilingTest::testMsgDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

profilingTest::testMsgDataReader::testMsgDataReader (void)
{}

profilingTest::testMsgDataReader::~testMsgDataReader (void)
{
}

profilingTest::testMsgDataReader_ptr
profilingTest::testMsgDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return testMsgDataReader::_duplicate (
      dynamic_cast<testMsgDataReader_ptr> (_tao_objref)
    );
}

profilingTest::testMsgDataReader_ptr
profilingTest::testMsgDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return testMsgDataReader::_duplicate (
      dynamic_cast<testMsgDataReader_ptr> (_tao_objref)
    );
}

profilingTest::testMsgDataReader_ptr
profilingTest::testMsgDataReader::_nil (void)
{
  return 0;
}

profilingTest::testMsgDataReader_ptr
profilingTest::testMsgDataReader::_duplicate (testMsgDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
profilingTest::testMsgDataReader::_tao_release (testMsgDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
profilingTest::testMsgDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:profilingTest/testMsgDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* profilingTest::testMsgDataReader::_interface_repository_id (void) const
{
  return "IDL:profilingTest/testMsgDataReader:1.0";
}

::CORBA::Boolean
profilingTest::testMsgDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

