// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "DDSPerfTestTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "DDSPerfTestTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDSPerfTest::PubMessageTypeSupport.

DDSPerfTest::PubMessageTypeSupport_ptr
TAO::Objref_Traits<DDSPerfTest::PubMessageTypeSupport>::duplicate (
    DDSPerfTest::PubMessageTypeSupport_ptr p)
{
  return DDSPerfTest::PubMessageTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<DDSPerfTest::PubMessageTypeSupport>::release (
    DDSPerfTest::PubMessageTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

DDSPerfTest::PubMessageTypeSupport_ptr
TAO::Objref_Traits<DDSPerfTest::PubMessageTypeSupport>::nil (void)
{
  return DDSPerfTest::PubMessageTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSPerfTest::PubMessageTypeSupport>::marshal (
    const DDSPerfTest::PubMessageTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDSPerfTest::PubMessageTypeSupport::PubMessageTypeSupport (void)
{}

DDSPerfTest::PubMessageTypeSupport::~PubMessageTypeSupport (void)
{
}

DDSPerfTest::PubMessageTypeSupport_ptr
DDSPerfTest::PubMessageTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PubMessageTypeSupport::_duplicate (
      dynamic_cast<PubMessageTypeSupport_ptr> (_tao_objref)
    );
}

DDSPerfTest::PubMessageTypeSupport_ptr
DDSPerfTest::PubMessageTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PubMessageTypeSupport::_duplicate (
      dynamic_cast<PubMessageTypeSupport_ptr> (_tao_objref)
    );
}

DDSPerfTest::PubMessageTypeSupport_ptr
DDSPerfTest::PubMessageTypeSupport::_nil (void)
{
  return 0;
}

DDSPerfTest::PubMessageTypeSupport_ptr
DDSPerfTest::PubMessageTypeSupport::_duplicate (PubMessageTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSPerfTest::PubMessageTypeSupport::_tao_release (PubMessageTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSPerfTest::PubMessageTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDSPerfTest/PubMessageTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSPerfTest::PubMessageTypeSupport::_interface_repository_id (void) const
{
  return "IDL:DDSPerfTest/PubMessageTypeSupport:1.0";
}

::CORBA::Boolean
DDSPerfTest::PubMessageTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDSPerfTest::PubMessageDataWriter.

DDSPerfTest::PubMessageDataWriter_ptr
TAO::Objref_Traits<DDSPerfTest::PubMessageDataWriter>::duplicate (
    DDSPerfTest::PubMessageDataWriter_ptr p)
{
  return DDSPerfTest::PubMessageDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<DDSPerfTest::PubMessageDataWriter>::release (
    DDSPerfTest::PubMessageDataWriter_ptr p)
{
  ::CORBA::release (p);
}

DDSPerfTest::PubMessageDataWriter_ptr
TAO::Objref_Traits<DDSPerfTest::PubMessageDataWriter>::nil (void)
{
  return DDSPerfTest::PubMessageDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSPerfTest::PubMessageDataWriter>::marshal (
    const DDSPerfTest::PubMessageDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDSPerfTest::PubMessageDataWriter::PubMessageDataWriter (void)
{}

DDSPerfTest::PubMessageDataWriter::~PubMessageDataWriter (void)
{
}

DDSPerfTest::PubMessageDataWriter_ptr
DDSPerfTest::PubMessageDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PubMessageDataWriter::_duplicate (
      dynamic_cast<PubMessageDataWriter_ptr> (_tao_objref)
    );
}

DDSPerfTest::PubMessageDataWriter_ptr
DDSPerfTest::PubMessageDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PubMessageDataWriter::_duplicate (
      dynamic_cast<PubMessageDataWriter_ptr> (_tao_objref)
    );
}

DDSPerfTest::PubMessageDataWriter_ptr
DDSPerfTest::PubMessageDataWriter::_nil (void)
{
  return 0;
}

DDSPerfTest::PubMessageDataWriter_ptr
DDSPerfTest::PubMessageDataWriter::_duplicate (PubMessageDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSPerfTest::PubMessageDataWriter::_tao_release (PubMessageDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSPerfTest::PubMessageDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDSPerfTest/PubMessageDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSPerfTest::PubMessageDataWriter::_interface_repository_id (void) const
{
  return "IDL:DDSPerfTest/PubMessageDataWriter:1.0";
}

::CORBA::Boolean
DDSPerfTest::PubMessageDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDSPerfTest::PubMessageDataReader.

DDSPerfTest::PubMessageDataReader_ptr
TAO::Objref_Traits<DDSPerfTest::PubMessageDataReader>::duplicate (
    DDSPerfTest::PubMessageDataReader_ptr p)
{
  return DDSPerfTest::PubMessageDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<DDSPerfTest::PubMessageDataReader>::release (
    DDSPerfTest::PubMessageDataReader_ptr p)
{
  ::CORBA::release (p);
}

DDSPerfTest::PubMessageDataReader_ptr
TAO::Objref_Traits<DDSPerfTest::PubMessageDataReader>::nil (void)
{
  return DDSPerfTest::PubMessageDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSPerfTest::PubMessageDataReader>::marshal (
    const DDSPerfTest::PubMessageDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDSPerfTest::PubMessageDataReader::PubMessageDataReader (void)
{}

DDSPerfTest::PubMessageDataReader::~PubMessageDataReader (void)
{
}

DDSPerfTest::PubMessageDataReader_ptr
DDSPerfTest::PubMessageDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PubMessageDataReader::_duplicate (
      dynamic_cast<PubMessageDataReader_ptr> (_tao_objref)
    );
}

DDSPerfTest::PubMessageDataReader_ptr
DDSPerfTest::PubMessageDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PubMessageDataReader::_duplicate (
      dynamic_cast<PubMessageDataReader_ptr> (_tao_objref)
    );
}

DDSPerfTest::PubMessageDataReader_ptr
DDSPerfTest::PubMessageDataReader::_nil (void)
{
  return 0;
}

DDSPerfTest::PubMessageDataReader_ptr
DDSPerfTest::PubMessageDataReader::_duplicate (PubMessageDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSPerfTest::PubMessageDataReader::_tao_release (PubMessageDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSPerfTest::PubMessageDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDSPerfTest/PubMessageDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSPerfTest::PubMessageDataReader::_interface_repository_id (void) const
{
  return "IDL:DDSPerfTest/PubMessageDataReader:1.0";
}

::CORBA::Boolean
DDSPerfTest::PubMessageDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDSPerfTest::AckMessageTypeSupport.

DDSPerfTest::AckMessageTypeSupport_ptr
TAO::Objref_Traits<DDSPerfTest::AckMessageTypeSupport>::duplicate (
    DDSPerfTest::AckMessageTypeSupport_ptr p)
{
  return DDSPerfTest::AckMessageTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<DDSPerfTest::AckMessageTypeSupport>::release (
    DDSPerfTest::AckMessageTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

DDSPerfTest::AckMessageTypeSupport_ptr
TAO::Objref_Traits<DDSPerfTest::AckMessageTypeSupport>::nil (void)
{
  return DDSPerfTest::AckMessageTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSPerfTest::AckMessageTypeSupport>::marshal (
    const DDSPerfTest::AckMessageTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDSPerfTest::AckMessageTypeSupport::AckMessageTypeSupport (void)
{}

DDSPerfTest::AckMessageTypeSupport::~AckMessageTypeSupport (void)
{
}

DDSPerfTest::AckMessageTypeSupport_ptr
DDSPerfTest::AckMessageTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return AckMessageTypeSupport::_duplicate (
      dynamic_cast<AckMessageTypeSupport_ptr> (_tao_objref)
    );
}

DDSPerfTest::AckMessageTypeSupport_ptr
DDSPerfTest::AckMessageTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return AckMessageTypeSupport::_duplicate (
      dynamic_cast<AckMessageTypeSupport_ptr> (_tao_objref)
    );
}

DDSPerfTest::AckMessageTypeSupport_ptr
DDSPerfTest::AckMessageTypeSupport::_nil (void)
{
  return 0;
}

DDSPerfTest::AckMessageTypeSupport_ptr
DDSPerfTest::AckMessageTypeSupport::_duplicate (AckMessageTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSPerfTest::AckMessageTypeSupport::_tao_release (AckMessageTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSPerfTest::AckMessageTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDSPerfTest/AckMessageTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSPerfTest::AckMessageTypeSupport::_interface_repository_id (void) const
{
  return "IDL:DDSPerfTest/AckMessageTypeSupport:1.0";
}

::CORBA::Boolean
DDSPerfTest::AckMessageTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDSPerfTest::AckMessageDataWriter.

DDSPerfTest::AckMessageDataWriter_ptr
TAO::Objref_Traits<DDSPerfTest::AckMessageDataWriter>::duplicate (
    DDSPerfTest::AckMessageDataWriter_ptr p)
{
  return DDSPerfTest::AckMessageDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<DDSPerfTest::AckMessageDataWriter>::release (
    DDSPerfTest::AckMessageDataWriter_ptr p)
{
  ::CORBA::release (p);
}

DDSPerfTest::AckMessageDataWriter_ptr
TAO::Objref_Traits<DDSPerfTest::AckMessageDataWriter>::nil (void)
{
  return DDSPerfTest::AckMessageDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSPerfTest::AckMessageDataWriter>::marshal (
    const DDSPerfTest::AckMessageDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDSPerfTest::AckMessageDataWriter::AckMessageDataWriter (void)
{}

DDSPerfTest::AckMessageDataWriter::~AckMessageDataWriter (void)
{
}

DDSPerfTest::AckMessageDataWriter_ptr
DDSPerfTest::AckMessageDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return AckMessageDataWriter::_duplicate (
      dynamic_cast<AckMessageDataWriter_ptr> (_tao_objref)
    );
}

DDSPerfTest::AckMessageDataWriter_ptr
DDSPerfTest::AckMessageDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return AckMessageDataWriter::_duplicate (
      dynamic_cast<AckMessageDataWriter_ptr> (_tao_objref)
    );
}

DDSPerfTest::AckMessageDataWriter_ptr
DDSPerfTest::AckMessageDataWriter::_nil (void)
{
  return 0;
}

DDSPerfTest::AckMessageDataWriter_ptr
DDSPerfTest::AckMessageDataWriter::_duplicate (AckMessageDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSPerfTest::AckMessageDataWriter::_tao_release (AckMessageDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSPerfTest::AckMessageDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDSPerfTest/AckMessageDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSPerfTest::AckMessageDataWriter::_interface_repository_id (void) const
{
  return "IDL:DDSPerfTest/AckMessageDataWriter:1.0";
}

::CORBA::Boolean
DDSPerfTest::AckMessageDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDSPerfTest::AckMessageDataReader.

DDSPerfTest::AckMessageDataReader_ptr
TAO::Objref_Traits<DDSPerfTest::AckMessageDataReader>::duplicate (
    DDSPerfTest::AckMessageDataReader_ptr p)
{
  return DDSPerfTest::AckMessageDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<DDSPerfTest::AckMessageDataReader>::release (
    DDSPerfTest::AckMessageDataReader_ptr p)
{
  ::CORBA::release (p);
}

DDSPerfTest::AckMessageDataReader_ptr
TAO::Objref_Traits<DDSPerfTest::AckMessageDataReader>::nil (void)
{
  return DDSPerfTest::AckMessageDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDSPerfTest::AckMessageDataReader>::marshal (
    const DDSPerfTest::AckMessageDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDSPerfTest::AckMessageDataReader::AckMessageDataReader (void)
{}

DDSPerfTest::AckMessageDataReader::~AckMessageDataReader (void)
{
}

DDSPerfTest::AckMessageDataReader_ptr
DDSPerfTest::AckMessageDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return AckMessageDataReader::_duplicate (
      dynamic_cast<AckMessageDataReader_ptr> (_tao_objref)
    );
}

DDSPerfTest::AckMessageDataReader_ptr
DDSPerfTest::AckMessageDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return AckMessageDataReader::_duplicate (
      dynamic_cast<AckMessageDataReader_ptr> (_tao_objref)
    );
}

DDSPerfTest::AckMessageDataReader_ptr
DDSPerfTest::AckMessageDataReader::_nil (void)
{
  return 0;
}

DDSPerfTest::AckMessageDataReader_ptr
DDSPerfTest::AckMessageDataReader::_duplicate (AckMessageDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDSPerfTest::AckMessageDataReader::_tao_release (AckMessageDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDSPerfTest::AckMessageDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDSPerfTest/AckMessageDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDSPerfTest::AckMessageDataReader::_interface_repository_id (void) const
{
  return "IDL:DDSPerfTest/AckMessageDataReader:1.0";
}

::CORBA::Boolean
DDSPerfTest::AckMessageDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

