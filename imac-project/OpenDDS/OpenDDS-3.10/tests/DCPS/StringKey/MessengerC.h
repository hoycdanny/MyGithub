// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_MESSENGERC_CPR6S9_H_
#define _TAO_IDL_MESSENGERC_CPR6S9_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "StringKey_export.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Array_VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Basic_Argument_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include "tao/Fixed_Array_Argument_T.h"
#include "tao/Var_Array_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO StringKey_Export

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace Messenger
{

  // TAO_IDL - Generated from
  // be/be_visitor_enum/enum_ch.cpp:47

  enum MyEnum
  {
    b,
    s,
    d,
    other1,
    other2
  };

  typedef MyEnum &MyEnum_out;

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  class MyUnion;

  typedef
    ::TAO_Fixed_Var_T<
        MyUnion
      >
    MyUnion_var;

  typedef
    MyUnion &
    MyUnion_out;

  class StringKey_Export MyUnion
  {
  public:
    MyUnion (void);
    MyUnion (const MyUnion &);
    ~MyUnion (void);

    MyUnion &operator= (const MyUnion &);

    // TAO_IDL - Generated from
    // be/be_visitor_union/discriminant_ch.cpp:70

    void _d (Messenger::MyEnum);
    Messenger::MyEnum _d (void) const;

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef MyUnion_var _var_type;
    typedef MyUnion_out _out_type;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void u_b ( ::CORBA::Boolean);
    ::CORBA::Boolean u_b (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void u_s ( ::CORBA::Short);
    ::CORBA::Short u_s (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void u_d ( ::CORBA::Double);
    ::CORBA::Double u_d (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void u_f ( ::CORBA::Float);
    ::CORBA::Float u_f (void) const;
  private:
    Messenger::MyEnum disc_;

    union
    {
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Boolean u_b_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Short u_s_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Double u_d_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Float u_f_;
    } u_;

    /// TAO extension - frees any allocated storage.
    void _reset (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_array/array_ch.cpp:54

  typedef MyEnum Enums[3];
  typedef MyEnum Enums_slice;
  struct Enums_tag {};
  

  typedef
    TAO_FixedArray_Var_T<
        Enums,
        Enums_slice,
        Enums_tag
      >
    Enums_var;

  typedef
    Enums
    Enums_out;

  typedef
    TAO_Array_Forany_T<
        Enums,
        Enums_slice,
        Enums_tag
      >
    Enums_forany;

  TAO_NAMESPACE_STORAGE_CLASS Enums_slice *
  Enums_alloc (void);

  TAO_NAMESPACE_STORAGE_CLASS void
  Enums_free (
      Enums_slice *_tao_slice);
  
  TAO_NAMESPACE_STORAGE_CLASS Enums_slice *
  Enums_dup (
      const Enums_slice *_tao_slice);
  
  TAO_NAMESPACE_STORAGE_CLASS void
  Enums_copy (
      Enums_slice *_tao_to,
      const Enums_slice *_tao_from);

  // TAO_IDL - Generated from
  // be/be_visitor_typedef/typedef_ch.cpp:293

  typedef MyEnum AnEnum;
  typedef MyEnum_out AnEnum_out;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_MESSENGER_ENUMSEQ_CH_)
#define _MESSENGER_ENUMSEQ_CH_

  class EnumSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        EnumSeq
      >
    EnumSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        EnumSeq
      >
    EnumSeq_out;

  class StringKey_Export EnumSeq
    : public
        ::TAO::unbounded_value_sequence<
            AnEnum
          >
  {
  public:
    EnumSeq (void);
    EnumSeq ( ::CORBA::ULong max);
    EnumSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      AnEnum* buffer,
      ::CORBA::Boolean release = false);
    EnumSeq (const EnumSeq &);
    virtual ~EnumSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef EnumSeq_var _var_type;
    typedef EnumSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct Message;

  typedef
    ::TAO_Var_Var_T<
        Message
      >
    Message_var;

  typedef
    ::TAO_Out_T<
        Message
      >
    Message_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct StringKey_Export Message
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef Message_var _var_type;
    typedef Message_out _out_type;
    
    ::TAO::String_Manager from;
    ::TAO::String_Manager subject;
    ::TAO::String_Manager subject_id;
    ::TAO::String_Manager text;
    ::CORBA::Long count;
    Messenger::Enums e;
    

    Messenger::MyUnion u;
    Messenger::EnumSeq seq;
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module Messenger

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:904

  template<>
  class Arg_Traits< ::Messenger::MyEnum>
    : public
        Basic_Arg_Traits_T<
            ::Messenger::MyEnum,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1058

  template<>
  class Arg_Traits< ::Messenger::MyUnion>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Messenger::MyUnion,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  template<>
  class Arg_Traits< ::Messenger::Enums_tag>
    : public
        Fixed_Array_Arg_Traits_T<
            ::Messenger::Enums_var,
            ::Messenger::Enums_forany,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Messenger::EnumSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::Messenger::EnumSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Messenger::Message>
    : public
        Var_Size_Arg_Traits_T<
            ::Messenger::Message,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
  template<>
  struct StringKey_Export Array_Traits<
      Messenger::Enums_forany
    >
  {
    static void free (
        Messenger::Enums_slice * _tao_slice);
    static Messenger::Enums_slice * dup (
        const Messenger::Enums_slice * _tao_slice);
    static void copy (
        Messenger::Enums_slice * _tao_to,
        const Messenger::Enums_slice * _tao_from);
    static Messenger::Enums_slice * alloc (void);
    static void zero (
        Messenger::Enums_slice * _tao_slice);
  };
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_ch.cpp:37


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

StringKey_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &strm, Messenger::MyEnum _tao_enumerator);
StringKey_Export ::CORBA::Boolean operator>> (TAO_InputCDR &strm, Messenger::MyEnum &_tao_enumerator);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

StringKey_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Messenger::MyUnion &);
StringKey_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Messenger::MyUnion &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_array/cdr_op_ch.cpp:102


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

StringKey_Export CORBA::Boolean operator<< (TAO_OutputCDR &strm, const Messenger::Enums_forany &_tao_array);
StringKey_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Messenger::Enums_forany &_tao_array);

TAO_END_VERSIONED_NAMESPACE_DECL


// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Messenger_EnumSeq_H_
#define _TAO_CDR_OP_Messenger_EnumSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


StringKey_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Messenger::EnumSeq &_tao_sequence);
StringKey_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Messenger::EnumSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Messenger_EnumSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

StringKey_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Messenger::Message &);
StringKey_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Messenger::Message &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "MessengerC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

