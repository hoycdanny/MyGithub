// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/


// TAO_IDL - Generated from
// be/be_visitor_union/union_ci.cpp:39

// *************************************************************
// Inline operations for union Messenger::MyUnion
// *************************************************************

// TAO_IDL - Generated from
// be/be_visitor_union/discriminant_ci.cpp:58

// Accessor to set the discriminant.
ACE_INLINE
void
Messenger::MyUnion::_d (Messenger::MyEnum discval)
{
  this->disc_ = discval;
}

// Accessor to get the discriminant.
ACE_INLINE
Messenger::MyEnum
Messenger::MyUnion::_d (void) const
{
  return this->disc_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:580

// Accessor to set the member.
ACE_INLINE
void
Messenger::MyUnion::u_b (CORBA::Boolean val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = Messenger::b;
  // Set the value.
  this->u_.u_b_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Boolean
Messenger::MyUnion::u_b (void) const
{
  return this->u_.u_b_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:580

// Accessor to set the member.
ACE_INLINE
void
Messenger::MyUnion::u_s (CORBA::Short val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = Messenger::s;
  // Set the value.
  this->u_.u_s_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Short
Messenger::MyUnion::u_s (void) const
{
  return this->u_.u_s_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:580

// Accessor to set the member.
ACE_INLINE
void
Messenger::MyUnion::u_d (CORBA::Double val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = Messenger::d;
  // Set the value.
  this->u_.u_d_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Double
Messenger::MyUnion::u_d (void) const
{
  return this->u_.u_d_;
}

// TAO_IDL - Generated from
// be/be_visitor_union_branch/public_ci.cpp:580

// Accessor to set the member.
ACE_INLINE
void
Messenger::MyUnion::u_f (CORBA::Float val)
{
  // Set the discriminant value.
  this->_reset ();
  this->disc_ = Messenger::other1;
  // Set the value.
  this->u_.u_f_ = val;
}

/// Retrieve the member.
ACE_INLINE
::CORBA::Float
Messenger::MyUnion::u_f (void) const
{
  return this->u_.u_f_;
}

// TAO_IDL - Generated from
// be/be_visitor_array/array_ci.cpp:150

ACE_INLINE
void
TAO::Array_Traits<Messenger::Enums_forany>::free (
    Messenger::Enums_slice * _tao_slice
  )
{
  Messenger::Enums_free (_tao_slice);
}

ACE_INLINE
Messenger::Enums_slice *
TAO::Array_Traits<Messenger::Enums_forany>::dup (
    const Messenger::Enums_slice * _tao_slice
  )
{
  return Messenger::Enums_dup (_tao_slice);
}

ACE_INLINE
void
TAO::Array_Traits<Messenger::Enums_forany>::copy (
    Messenger::Enums_slice * _tao_to,
    const Messenger::Enums_slice * _tao_from
  )
{
  Messenger::Enums_copy (_tao_to, _tao_from);
}

ACE_INLINE
void
TAO::Array_Traits<Messenger::Enums_forany>::zero (
    Messenger::Enums_slice * _tao_slice
  )
{
  // Zero each individual element.
  for ( ::CORBA::ULong i0 = 0; i0 < 3; ++i0)
    {
      _tao_slice[i0] = Messenger::MyEnum ();
    }
}

ACE_INLINE
Messenger::Enums_slice *
TAO::Array_Traits<Messenger::Enums_forany>::alloc (void)
{
  return Messenger::Enums_alloc ();
}


