// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "MultiTopicTestTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "MultiTopicTestTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for LocationInfoTypeSupport.

LocationInfoTypeSupport_ptr
TAO::Objref_Traits<LocationInfoTypeSupport>::duplicate (
    LocationInfoTypeSupport_ptr p)
{
  return LocationInfoTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<LocationInfoTypeSupport>::release (
    LocationInfoTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

LocationInfoTypeSupport_ptr
TAO::Objref_Traits<LocationInfoTypeSupport>::nil (void)
{
  return LocationInfoTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<LocationInfoTypeSupport>::marshal (
    const LocationInfoTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

LocationInfoTypeSupport::LocationInfoTypeSupport (void)
{}

LocationInfoTypeSupport::~LocationInfoTypeSupport (void)
{
}

LocationInfoTypeSupport_ptr
LocationInfoTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return LocationInfoTypeSupport::_duplicate (
      dynamic_cast<LocationInfoTypeSupport_ptr> (_tao_objref)
    );
}

LocationInfoTypeSupport_ptr
LocationInfoTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return LocationInfoTypeSupport::_duplicate (
      dynamic_cast<LocationInfoTypeSupport_ptr> (_tao_objref)
    );
}

LocationInfoTypeSupport_ptr
LocationInfoTypeSupport::_nil (void)
{
  return 0;
}

LocationInfoTypeSupport_ptr
LocationInfoTypeSupport::_duplicate (LocationInfoTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
LocationInfoTypeSupport::_tao_release (LocationInfoTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
LocationInfoTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:LocationInfoTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* LocationInfoTypeSupport::_interface_repository_id (void) const
{
  return "IDL:LocationInfoTypeSupport:1.0";
}

::CORBA::Boolean
LocationInfoTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for LocationInfoDataWriter.

LocationInfoDataWriter_ptr
TAO::Objref_Traits<LocationInfoDataWriter>::duplicate (
    LocationInfoDataWriter_ptr p)
{
  return LocationInfoDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<LocationInfoDataWriter>::release (
    LocationInfoDataWriter_ptr p)
{
  ::CORBA::release (p);
}

LocationInfoDataWriter_ptr
TAO::Objref_Traits<LocationInfoDataWriter>::nil (void)
{
  return LocationInfoDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<LocationInfoDataWriter>::marshal (
    const LocationInfoDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

LocationInfoDataWriter::LocationInfoDataWriter (void)
{}

LocationInfoDataWriter::~LocationInfoDataWriter (void)
{
}

LocationInfoDataWriter_ptr
LocationInfoDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return LocationInfoDataWriter::_duplicate (
      dynamic_cast<LocationInfoDataWriter_ptr> (_tao_objref)
    );
}

LocationInfoDataWriter_ptr
LocationInfoDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return LocationInfoDataWriter::_duplicate (
      dynamic_cast<LocationInfoDataWriter_ptr> (_tao_objref)
    );
}

LocationInfoDataWriter_ptr
LocationInfoDataWriter::_nil (void)
{
  return 0;
}

LocationInfoDataWriter_ptr
LocationInfoDataWriter::_duplicate (LocationInfoDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
LocationInfoDataWriter::_tao_release (LocationInfoDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
LocationInfoDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:LocationInfoDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* LocationInfoDataWriter::_interface_repository_id (void) const
{
  return "IDL:LocationInfoDataWriter:1.0";
}

::CORBA::Boolean
LocationInfoDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for LocationInfoDataReader.

LocationInfoDataReader_ptr
TAO::Objref_Traits<LocationInfoDataReader>::duplicate (
    LocationInfoDataReader_ptr p)
{
  return LocationInfoDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<LocationInfoDataReader>::release (
    LocationInfoDataReader_ptr p)
{
  ::CORBA::release (p);
}

LocationInfoDataReader_ptr
TAO::Objref_Traits<LocationInfoDataReader>::nil (void)
{
  return LocationInfoDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<LocationInfoDataReader>::marshal (
    const LocationInfoDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

LocationInfoDataReader::LocationInfoDataReader (void)
{}

LocationInfoDataReader::~LocationInfoDataReader (void)
{
}

LocationInfoDataReader_ptr
LocationInfoDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return LocationInfoDataReader::_duplicate (
      dynamic_cast<LocationInfoDataReader_ptr> (_tao_objref)
    );
}

LocationInfoDataReader_ptr
LocationInfoDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return LocationInfoDataReader::_duplicate (
      dynamic_cast<LocationInfoDataReader_ptr> (_tao_objref)
    );
}

LocationInfoDataReader_ptr
LocationInfoDataReader::_nil (void)
{
  return 0;
}

LocationInfoDataReader_ptr
LocationInfoDataReader::_duplicate (LocationInfoDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
LocationInfoDataReader::_tao_release (LocationInfoDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
LocationInfoDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:LocationInfoDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* LocationInfoDataReader::_interface_repository_id (void) const
{
  return "IDL:LocationInfoDataReader:1.0";
}

::CORBA::Boolean
LocationInfoDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for PlanInfoTypeSupport.

PlanInfoTypeSupport_ptr
TAO::Objref_Traits<PlanInfoTypeSupport>::duplicate (
    PlanInfoTypeSupport_ptr p)
{
  return PlanInfoTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<PlanInfoTypeSupport>::release (
    PlanInfoTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

PlanInfoTypeSupport_ptr
TAO::Objref_Traits<PlanInfoTypeSupport>::nil (void)
{
  return PlanInfoTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<PlanInfoTypeSupport>::marshal (
    const PlanInfoTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

PlanInfoTypeSupport::PlanInfoTypeSupport (void)
{}

PlanInfoTypeSupport::~PlanInfoTypeSupport (void)
{
}

PlanInfoTypeSupport_ptr
PlanInfoTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PlanInfoTypeSupport::_duplicate (
      dynamic_cast<PlanInfoTypeSupport_ptr> (_tao_objref)
    );
}

PlanInfoTypeSupport_ptr
PlanInfoTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PlanInfoTypeSupport::_duplicate (
      dynamic_cast<PlanInfoTypeSupport_ptr> (_tao_objref)
    );
}

PlanInfoTypeSupport_ptr
PlanInfoTypeSupport::_nil (void)
{
  return 0;
}

PlanInfoTypeSupport_ptr
PlanInfoTypeSupport::_duplicate (PlanInfoTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
PlanInfoTypeSupport::_tao_release (PlanInfoTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
PlanInfoTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:PlanInfoTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* PlanInfoTypeSupport::_interface_repository_id (void) const
{
  return "IDL:PlanInfoTypeSupport:1.0";
}

::CORBA::Boolean
PlanInfoTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for PlanInfoDataWriter.

PlanInfoDataWriter_ptr
TAO::Objref_Traits<PlanInfoDataWriter>::duplicate (
    PlanInfoDataWriter_ptr p)
{
  return PlanInfoDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<PlanInfoDataWriter>::release (
    PlanInfoDataWriter_ptr p)
{
  ::CORBA::release (p);
}

PlanInfoDataWriter_ptr
TAO::Objref_Traits<PlanInfoDataWriter>::nil (void)
{
  return PlanInfoDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<PlanInfoDataWriter>::marshal (
    const PlanInfoDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

PlanInfoDataWriter::PlanInfoDataWriter (void)
{}

PlanInfoDataWriter::~PlanInfoDataWriter (void)
{
}

PlanInfoDataWriter_ptr
PlanInfoDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PlanInfoDataWriter::_duplicate (
      dynamic_cast<PlanInfoDataWriter_ptr> (_tao_objref)
    );
}

PlanInfoDataWriter_ptr
PlanInfoDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PlanInfoDataWriter::_duplicate (
      dynamic_cast<PlanInfoDataWriter_ptr> (_tao_objref)
    );
}

PlanInfoDataWriter_ptr
PlanInfoDataWriter::_nil (void)
{
  return 0;
}

PlanInfoDataWriter_ptr
PlanInfoDataWriter::_duplicate (PlanInfoDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
PlanInfoDataWriter::_tao_release (PlanInfoDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
PlanInfoDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:PlanInfoDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* PlanInfoDataWriter::_interface_repository_id (void) const
{
  return "IDL:PlanInfoDataWriter:1.0";
}

::CORBA::Boolean
PlanInfoDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for PlanInfoDataReader.

PlanInfoDataReader_ptr
TAO::Objref_Traits<PlanInfoDataReader>::duplicate (
    PlanInfoDataReader_ptr p)
{
  return PlanInfoDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<PlanInfoDataReader>::release (
    PlanInfoDataReader_ptr p)
{
  ::CORBA::release (p);
}

PlanInfoDataReader_ptr
TAO::Objref_Traits<PlanInfoDataReader>::nil (void)
{
  return PlanInfoDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<PlanInfoDataReader>::marshal (
    const PlanInfoDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

PlanInfoDataReader::PlanInfoDataReader (void)
{}

PlanInfoDataReader::~PlanInfoDataReader (void)
{
}

PlanInfoDataReader_ptr
PlanInfoDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PlanInfoDataReader::_duplicate (
      dynamic_cast<PlanInfoDataReader_ptr> (_tao_objref)
    );
}

PlanInfoDataReader_ptr
PlanInfoDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return PlanInfoDataReader::_duplicate (
      dynamic_cast<PlanInfoDataReader_ptr> (_tao_objref)
    );
}

PlanInfoDataReader_ptr
PlanInfoDataReader::_nil (void)
{
  return 0;
}

PlanInfoDataReader_ptr
PlanInfoDataReader::_duplicate (PlanInfoDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
PlanInfoDataReader::_tao_release (PlanInfoDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
PlanInfoDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:PlanInfoDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* PlanInfoDataReader::_interface_repository_id (void) const
{
  return "IDL:PlanInfoDataReader:1.0";
}

::CORBA::Boolean
PlanInfoDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for MoreInfoTypeSupport.

MoreInfoTypeSupport_ptr
TAO::Objref_Traits<MoreInfoTypeSupport>::duplicate (
    MoreInfoTypeSupport_ptr p)
{
  return MoreInfoTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<MoreInfoTypeSupport>::release (
    MoreInfoTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

MoreInfoTypeSupport_ptr
TAO::Objref_Traits<MoreInfoTypeSupport>::nil (void)
{
  return MoreInfoTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<MoreInfoTypeSupport>::marshal (
    const MoreInfoTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

MoreInfoTypeSupport::MoreInfoTypeSupport (void)
{}

MoreInfoTypeSupport::~MoreInfoTypeSupport (void)
{
}

MoreInfoTypeSupport_ptr
MoreInfoTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MoreInfoTypeSupport::_duplicate (
      dynamic_cast<MoreInfoTypeSupport_ptr> (_tao_objref)
    );
}

MoreInfoTypeSupport_ptr
MoreInfoTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MoreInfoTypeSupport::_duplicate (
      dynamic_cast<MoreInfoTypeSupport_ptr> (_tao_objref)
    );
}

MoreInfoTypeSupport_ptr
MoreInfoTypeSupport::_nil (void)
{
  return 0;
}

MoreInfoTypeSupport_ptr
MoreInfoTypeSupport::_duplicate (MoreInfoTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
MoreInfoTypeSupport::_tao_release (MoreInfoTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
MoreInfoTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:MoreInfoTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* MoreInfoTypeSupport::_interface_repository_id (void) const
{
  return "IDL:MoreInfoTypeSupport:1.0";
}

::CORBA::Boolean
MoreInfoTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for MoreInfoDataWriter.

MoreInfoDataWriter_ptr
TAO::Objref_Traits<MoreInfoDataWriter>::duplicate (
    MoreInfoDataWriter_ptr p)
{
  return MoreInfoDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<MoreInfoDataWriter>::release (
    MoreInfoDataWriter_ptr p)
{
  ::CORBA::release (p);
}

MoreInfoDataWriter_ptr
TAO::Objref_Traits<MoreInfoDataWriter>::nil (void)
{
  return MoreInfoDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<MoreInfoDataWriter>::marshal (
    const MoreInfoDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

MoreInfoDataWriter::MoreInfoDataWriter (void)
{}

MoreInfoDataWriter::~MoreInfoDataWriter (void)
{
}

MoreInfoDataWriter_ptr
MoreInfoDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MoreInfoDataWriter::_duplicate (
      dynamic_cast<MoreInfoDataWriter_ptr> (_tao_objref)
    );
}

MoreInfoDataWriter_ptr
MoreInfoDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MoreInfoDataWriter::_duplicate (
      dynamic_cast<MoreInfoDataWriter_ptr> (_tao_objref)
    );
}

MoreInfoDataWriter_ptr
MoreInfoDataWriter::_nil (void)
{
  return 0;
}

MoreInfoDataWriter_ptr
MoreInfoDataWriter::_duplicate (MoreInfoDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
MoreInfoDataWriter::_tao_release (MoreInfoDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
MoreInfoDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:MoreInfoDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* MoreInfoDataWriter::_interface_repository_id (void) const
{
  return "IDL:MoreInfoDataWriter:1.0";
}

::CORBA::Boolean
MoreInfoDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for MoreInfoDataReader.

MoreInfoDataReader_ptr
TAO::Objref_Traits<MoreInfoDataReader>::duplicate (
    MoreInfoDataReader_ptr p)
{
  return MoreInfoDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<MoreInfoDataReader>::release (
    MoreInfoDataReader_ptr p)
{
  ::CORBA::release (p);
}

MoreInfoDataReader_ptr
TAO::Objref_Traits<MoreInfoDataReader>::nil (void)
{
  return MoreInfoDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<MoreInfoDataReader>::marshal (
    const MoreInfoDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

MoreInfoDataReader::MoreInfoDataReader (void)
{}

MoreInfoDataReader::~MoreInfoDataReader (void)
{
}

MoreInfoDataReader_ptr
MoreInfoDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MoreInfoDataReader::_duplicate (
      dynamic_cast<MoreInfoDataReader_ptr> (_tao_objref)
    );
}

MoreInfoDataReader_ptr
MoreInfoDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return MoreInfoDataReader::_duplicate (
      dynamic_cast<MoreInfoDataReader_ptr> (_tao_objref)
    );
}

MoreInfoDataReader_ptr
MoreInfoDataReader::_nil (void)
{
  return 0;
}

MoreInfoDataReader_ptr
MoreInfoDataReader::_duplicate (MoreInfoDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
MoreInfoDataReader::_tao_release (MoreInfoDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
MoreInfoDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:MoreInfoDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* MoreInfoDataReader::_interface_repository_id (void) const
{
  return "IDL:MoreInfoDataReader:1.0";
}

::CORBA::Boolean
MoreInfoDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for UnrelatedInfoTypeSupport.

UnrelatedInfoTypeSupport_ptr
TAO::Objref_Traits<UnrelatedInfoTypeSupport>::duplicate (
    UnrelatedInfoTypeSupport_ptr p)
{
  return UnrelatedInfoTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<UnrelatedInfoTypeSupport>::release (
    UnrelatedInfoTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

UnrelatedInfoTypeSupport_ptr
TAO::Objref_Traits<UnrelatedInfoTypeSupport>::nil (void)
{
  return UnrelatedInfoTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UnrelatedInfoTypeSupport>::marshal (
    const UnrelatedInfoTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

UnrelatedInfoTypeSupport::UnrelatedInfoTypeSupport (void)
{}

UnrelatedInfoTypeSupport::~UnrelatedInfoTypeSupport (void)
{
}

UnrelatedInfoTypeSupport_ptr
UnrelatedInfoTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UnrelatedInfoTypeSupport::_duplicate (
      dynamic_cast<UnrelatedInfoTypeSupport_ptr> (_tao_objref)
    );
}

UnrelatedInfoTypeSupport_ptr
UnrelatedInfoTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UnrelatedInfoTypeSupport::_duplicate (
      dynamic_cast<UnrelatedInfoTypeSupport_ptr> (_tao_objref)
    );
}

UnrelatedInfoTypeSupport_ptr
UnrelatedInfoTypeSupport::_nil (void)
{
  return 0;
}

UnrelatedInfoTypeSupport_ptr
UnrelatedInfoTypeSupport::_duplicate (UnrelatedInfoTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UnrelatedInfoTypeSupport::_tao_release (UnrelatedInfoTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UnrelatedInfoTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UnrelatedInfoTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UnrelatedInfoTypeSupport::_interface_repository_id (void) const
{
  return "IDL:UnrelatedInfoTypeSupport:1.0";
}

::CORBA::Boolean
UnrelatedInfoTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for UnrelatedInfoDataWriter.

UnrelatedInfoDataWriter_ptr
TAO::Objref_Traits<UnrelatedInfoDataWriter>::duplicate (
    UnrelatedInfoDataWriter_ptr p)
{
  return UnrelatedInfoDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<UnrelatedInfoDataWriter>::release (
    UnrelatedInfoDataWriter_ptr p)
{
  ::CORBA::release (p);
}

UnrelatedInfoDataWriter_ptr
TAO::Objref_Traits<UnrelatedInfoDataWriter>::nil (void)
{
  return UnrelatedInfoDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UnrelatedInfoDataWriter>::marshal (
    const UnrelatedInfoDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

UnrelatedInfoDataWriter::UnrelatedInfoDataWriter (void)
{}

UnrelatedInfoDataWriter::~UnrelatedInfoDataWriter (void)
{
}

UnrelatedInfoDataWriter_ptr
UnrelatedInfoDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UnrelatedInfoDataWriter::_duplicate (
      dynamic_cast<UnrelatedInfoDataWriter_ptr> (_tao_objref)
    );
}

UnrelatedInfoDataWriter_ptr
UnrelatedInfoDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UnrelatedInfoDataWriter::_duplicate (
      dynamic_cast<UnrelatedInfoDataWriter_ptr> (_tao_objref)
    );
}

UnrelatedInfoDataWriter_ptr
UnrelatedInfoDataWriter::_nil (void)
{
  return 0;
}

UnrelatedInfoDataWriter_ptr
UnrelatedInfoDataWriter::_duplicate (UnrelatedInfoDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UnrelatedInfoDataWriter::_tao_release (UnrelatedInfoDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UnrelatedInfoDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UnrelatedInfoDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UnrelatedInfoDataWriter::_interface_repository_id (void) const
{
  return "IDL:UnrelatedInfoDataWriter:1.0";
}

::CORBA::Boolean
UnrelatedInfoDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for UnrelatedInfoDataReader.

UnrelatedInfoDataReader_ptr
TAO::Objref_Traits<UnrelatedInfoDataReader>::duplicate (
    UnrelatedInfoDataReader_ptr p)
{
  return UnrelatedInfoDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<UnrelatedInfoDataReader>::release (
    UnrelatedInfoDataReader_ptr p)
{
  ::CORBA::release (p);
}

UnrelatedInfoDataReader_ptr
TAO::Objref_Traits<UnrelatedInfoDataReader>::nil (void)
{
  return UnrelatedInfoDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<UnrelatedInfoDataReader>::marshal (
    const UnrelatedInfoDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

UnrelatedInfoDataReader::UnrelatedInfoDataReader (void)
{}

UnrelatedInfoDataReader::~UnrelatedInfoDataReader (void)
{
}

UnrelatedInfoDataReader_ptr
UnrelatedInfoDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UnrelatedInfoDataReader::_duplicate (
      dynamic_cast<UnrelatedInfoDataReader_ptr> (_tao_objref)
    );
}

UnrelatedInfoDataReader_ptr
UnrelatedInfoDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return UnrelatedInfoDataReader::_duplicate (
      dynamic_cast<UnrelatedInfoDataReader_ptr> (_tao_objref)
    );
}

UnrelatedInfoDataReader_ptr
UnrelatedInfoDataReader::_nil (void)
{
  return 0;
}

UnrelatedInfoDataReader_ptr
UnrelatedInfoDataReader::_duplicate (UnrelatedInfoDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
UnrelatedInfoDataReader::_tao_release (UnrelatedInfoDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
UnrelatedInfoDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:UnrelatedInfoDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* UnrelatedInfoDataReader::_interface_repository_id (void) const
{
  return "IDL:UnrelatedInfoDataReader:1.0";
}

::CORBA::Boolean
UnrelatedInfoDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for ResultingTypeSupport.

ResultingTypeSupport_ptr
TAO::Objref_Traits<ResultingTypeSupport>::duplicate (
    ResultingTypeSupport_ptr p)
{
  return ResultingTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<ResultingTypeSupport>::release (
    ResultingTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

ResultingTypeSupport_ptr
TAO::Objref_Traits<ResultingTypeSupport>::nil (void)
{
  return ResultingTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ResultingTypeSupport>::marshal (
    const ResultingTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

ResultingTypeSupport::ResultingTypeSupport (void)
{}

ResultingTypeSupport::~ResultingTypeSupport (void)
{
}

ResultingTypeSupport_ptr
ResultingTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ResultingTypeSupport::_duplicate (
      dynamic_cast<ResultingTypeSupport_ptr> (_tao_objref)
    );
}

ResultingTypeSupport_ptr
ResultingTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ResultingTypeSupport::_duplicate (
      dynamic_cast<ResultingTypeSupport_ptr> (_tao_objref)
    );
}

ResultingTypeSupport_ptr
ResultingTypeSupport::_nil (void)
{
  return 0;
}

ResultingTypeSupport_ptr
ResultingTypeSupport::_duplicate (ResultingTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ResultingTypeSupport::_tao_release (ResultingTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ResultingTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:ResultingTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* ResultingTypeSupport::_interface_repository_id (void) const
{
  return "IDL:ResultingTypeSupport:1.0";
}

::CORBA::Boolean
ResultingTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for ResultingDataWriter.

ResultingDataWriter_ptr
TAO::Objref_Traits<ResultingDataWriter>::duplicate (
    ResultingDataWriter_ptr p)
{
  return ResultingDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<ResultingDataWriter>::release (
    ResultingDataWriter_ptr p)
{
  ::CORBA::release (p);
}

ResultingDataWriter_ptr
TAO::Objref_Traits<ResultingDataWriter>::nil (void)
{
  return ResultingDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ResultingDataWriter>::marshal (
    const ResultingDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

ResultingDataWriter::ResultingDataWriter (void)
{}

ResultingDataWriter::~ResultingDataWriter (void)
{
}

ResultingDataWriter_ptr
ResultingDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ResultingDataWriter::_duplicate (
      dynamic_cast<ResultingDataWriter_ptr> (_tao_objref)
    );
}

ResultingDataWriter_ptr
ResultingDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ResultingDataWriter::_duplicate (
      dynamic_cast<ResultingDataWriter_ptr> (_tao_objref)
    );
}

ResultingDataWriter_ptr
ResultingDataWriter::_nil (void)
{
  return 0;
}

ResultingDataWriter_ptr
ResultingDataWriter::_duplicate (ResultingDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ResultingDataWriter::_tao_release (ResultingDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ResultingDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:ResultingDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* ResultingDataWriter::_interface_repository_id (void) const
{
  return "IDL:ResultingDataWriter:1.0";
}

::CORBA::Boolean
ResultingDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for ResultingDataReader.

ResultingDataReader_ptr
TAO::Objref_Traits<ResultingDataReader>::duplicate (
    ResultingDataReader_ptr p)
{
  return ResultingDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<ResultingDataReader>::release (
    ResultingDataReader_ptr p)
{
  ::CORBA::release (p);
}

ResultingDataReader_ptr
TAO::Objref_Traits<ResultingDataReader>::nil (void)
{
  return ResultingDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<ResultingDataReader>::marshal (
    const ResultingDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

ResultingDataReader::ResultingDataReader (void)
{}

ResultingDataReader::~ResultingDataReader (void)
{
}

ResultingDataReader_ptr
ResultingDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ResultingDataReader::_duplicate (
      dynamic_cast<ResultingDataReader_ptr> (_tao_objref)
    );
}

ResultingDataReader_ptr
ResultingDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return ResultingDataReader::_duplicate (
      dynamic_cast<ResultingDataReader_ptr> (_tao_objref)
    );
}

ResultingDataReader_ptr
ResultingDataReader::_nil (void)
{
  return 0;
}

ResultingDataReader_ptr
ResultingDataReader::_duplicate (ResultingDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
ResultingDataReader::_tao_release (ResultingDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
ResultingDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:ResultingDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* ResultingDataReader::_interface_repository_id (void) const
{
  return "IDL:ResultingDataReader:1.0";
}

::CORBA::Boolean
ResultingDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

