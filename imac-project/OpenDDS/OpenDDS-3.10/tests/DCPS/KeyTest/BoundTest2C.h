// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_BOUNDTEST2C_PSQI9B_H_
#define _TAO_IDL_BOUNDTEST2C_PSQI9B_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "KeyTest_export.h"
#include "tao/ORB.h"
#include "tao/Basic_Types.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/VarOut_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include "tao/UB_String_Arguments.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "tao/StringSeqC.h"
#include "tao/FloatSeqC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO KeyTest_Export

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace Bound
{

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_BOUND_BOUNDEDFLOATSEQ_CH_)
#define _BOUND_BOUNDEDFLOATSEQ_CH_

  class BoundedFloatSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        BoundedFloatSeq
      >
    BoundedFloatSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        BoundedFloatSeq
      >
    BoundedFloatSeq_out;

  class KeyTest_Export BoundedFloatSeq
    : public
        ::TAO::bounded_value_sequence<
            ::CORBA::Float,
            20
          >
  {
  public:
    BoundedFloatSeq (void);
    BoundedFloatSeq (
      ::CORBA::ULong length,
      ::CORBA::Float* buffer,
      ::CORBA::Boolean release = false);
    BoundedFloatSeq (const BoundedFloatSeq &);
    virtual ~BoundedFloatSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef BoundedFloatSeq_var _var_type;
    typedef BoundedFloatSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct BoundedSequenceOfBoundedMessage;

  typedef
    ::TAO_Var_Var_T<
        BoundedSequenceOfBoundedMessage
      >
    BoundedSequenceOfBoundedMessage_var;

  typedef
    ::TAO_Out_T<
        BoundedSequenceOfBoundedMessage
      >
    BoundedSequenceOfBoundedMessage_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct KeyTest_Export BoundedSequenceOfBoundedMessage
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef BoundedSequenceOfBoundedMessage_var _var_type;
    typedef BoundedSequenceOfBoundedMessage_out _out_type;
    
    Bound::BoundedFloatSeq float_seq;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_BOUND_UNBOUNDEDFLOATSEQ_CH_)
#define _BOUND_UNBOUNDEDFLOATSEQ_CH_

  class UnboundedFloatSeq;

  typedef
    ::TAO_FixedSeq_Var_T<
        UnboundedFloatSeq
      >
    UnboundedFloatSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        UnboundedFloatSeq
      >
    UnboundedFloatSeq_out;

  class KeyTest_Export UnboundedFloatSeq
    : public
        ::TAO::unbounded_value_sequence<
            ::CORBA::Float
          >
  {
  public:
    UnboundedFloatSeq (void);
    UnboundedFloatSeq ( ::CORBA::ULong max);
    UnboundedFloatSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Float* buffer,
      ::CORBA::Boolean release = false);
    UnboundedFloatSeq (const UnboundedFloatSeq &);
    virtual ~UnboundedFloatSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef UnboundedFloatSeq_var _var_type;
    typedef UnboundedFloatSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct UnboundedSequenceOfBoundedMessage;

  typedef
    ::TAO_Var_Var_T<
        UnboundedSequenceOfBoundedMessage
      >
    UnboundedSequenceOfBoundedMessage_var;

  typedef
    ::TAO_Out_T<
        UnboundedSequenceOfBoundedMessage
      >
    UnboundedSequenceOfBoundedMessage_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct KeyTest_Export UnboundedSequenceOfBoundedMessage
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef UnboundedSequenceOfBoundedMessage_var _var_type;
    typedef UnboundedSequenceOfBoundedMessage_out _out_type;
    
    Bound::UnboundedFloatSeq float_seq;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_BOUND_BOUNDEDSTRINGSEQ_CH_)
#define _BOUND_BOUNDEDSTRINGSEQ_CH_

  class BoundedStringSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        BoundedStringSeq
      >
    BoundedStringSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        BoundedStringSeq
      >
    BoundedStringSeq_out;

  class KeyTest_Export BoundedStringSeq
    : public
        ::TAO::bounded_basic_string_sequence<char, 20>
  {
  public:
    BoundedStringSeq (void);
    BoundedStringSeq (
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer,
      ::CORBA::Boolean release = false);
    BoundedStringSeq (const BoundedStringSeq &);
    virtual ~BoundedStringSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef BoundedStringSeq_var _var_type;
    typedef BoundedStringSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct BoundedSequenceOfUnboundedMessage;

  typedef
    ::TAO_Var_Var_T<
        BoundedSequenceOfUnboundedMessage
      >
    BoundedSequenceOfUnboundedMessage_var;

  typedef
    ::TAO_Out_T<
        BoundedSequenceOfUnboundedMessage
      >
    BoundedSequenceOfUnboundedMessage_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct KeyTest_Export BoundedSequenceOfUnboundedMessage
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef BoundedSequenceOfUnboundedMessage_var _var_type;
    typedef BoundedSequenceOfUnboundedMessage_out _out_type;
    
    Bound::BoundedStringSeq string_seq;
  };

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_BOUND_UNBOUNDEDSTRINGSEQ_CH_)
#define _BOUND_UNBOUNDEDSTRINGSEQ_CH_

  class UnboundedStringSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        UnboundedStringSeq
      >
    UnboundedStringSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        UnboundedStringSeq
      >
    UnboundedStringSeq_out;

  class KeyTest_Export UnboundedStringSeq
    : public
        ::TAO::unbounded_basic_string_sequence<char>
  {
  public:
    UnboundedStringSeq (void);
    UnboundedStringSeq ( ::CORBA::ULong max);
    UnboundedStringSeq (
      ::CORBA::ULong max,
      ::CORBA::ULong length,
      ::CORBA::Char ** buffer,
      ::CORBA::Boolean release = false);
    UnboundedStringSeq (const UnboundedStringSeq &);
    virtual ~UnboundedStringSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef UnboundedStringSeq_var _var_type;
    typedef UnboundedStringSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct UnboundedSequenceOfUnboundedMessage;

  typedef
    ::TAO_Var_Var_T<
        UnboundedSequenceOfUnboundedMessage
      >
    UnboundedSequenceOfUnboundedMessage_var;

  typedef
    ::TAO_Out_T<
        UnboundedSequenceOfUnboundedMessage
      >
    UnboundedSequenceOfUnboundedMessage_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct KeyTest_Export UnboundedSequenceOfUnboundedMessage
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef UnboundedSequenceOfUnboundedMessage_var _var_type;
    typedef UnboundedSequenceOfUnboundedMessage_out _out_type;
    
    Bound::UnboundedStringSeq string_seq;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  class BoundedUnion;

  typedef
    ::TAO_Fixed_Var_T<
        BoundedUnion
      >
    BoundedUnion_var;

  typedef
    BoundedUnion &
    BoundedUnion_out;

  class KeyTest_Export BoundedUnion
  {
  public:
    BoundedUnion (void);
    BoundedUnion (const BoundedUnion &);
    ~BoundedUnion (void);

    BoundedUnion &operator= (const BoundedUnion &);

    // TAO_IDL - Generated from
    // be/be_visitor_union/discriminant_ch.cpp:103

    void _d ( ::CORBA::Short);
    ::CORBA::Short _d (void) const;

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef BoundedUnion_var _var_type;
    typedef BoundedUnion_out _out_type;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void float_field ( ::CORBA::Float);
    ::CORBA::Float float_field (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void long_field ( ::CORBA::Long);
    ::CORBA::Long long_field (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void short_field ( ::CORBA::Short);
    ::CORBA::Short short_field (void) const;
  private:
    ::CORBA::Short disc_;

    union
    {
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Float float_field_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Long long_field_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Short short_field_;
    } u_;

    /// TAO extension - frees any allocated storage.
    void _reset (void);
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct BoundedUnionMessage;

  typedef
    ::TAO_Fixed_Var_T<
        BoundedUnionMessage
      >
    BoundedUnionMessage_var;

  typedef
    BoundedUnionMessage &
    BoundedUnionMessage_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct KeyTest_Export BoundedUnionMessage
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef BoundedUnionMessage_var _var_type;
    typedef BoundedUnionMessage_out _out_type;
    
    

    Bound::BoundedUnion union_field;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  class UnboundedUnion;

  typedef
    ::TAO_Var_Var_T<
        UnboundedUnion
      >
    UnboundedUnion_var;

  typedef
    ::TAO_Out_T<
        UnboundedUnion
      >
    UnboundedUnion_out;

  class KeyTest_Export UnboundedUnion
  {
  public:
    UnboundedUnion (void);
    UnboundedUnion (const UnboundedUnion &);
    ~UnboundedUnion (void);

    UnboundedUnion &operator= (const UnboundedUnion &);

    // TAO_IDL - Generated from
    // be/be_visitor_union/discriminant_ch.cpp:103

    void _d ( ::CORBA::Short);
    ::CORBA::Short _d (void) const;

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef UnboundedUnion_var _var_type;
    typedef UnboundedUnion_out _out_type;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:583

    void string_field (char *);
    void string_field (const char *);
    void string_field (const ::CORBA::String_var&);
    const char *string_field (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void long_field ( ::CORBA::Long);
    ::CORBA::Long long_field (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void short_field ( ::CORBA::Short);
    ::CORBA::Short short_field (void) const;
  private:
    ::CORBA::Short disc_;

    union
    {
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:477
      char *string_field_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Long long_field_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Short short_field_;
    } u_;

    /// TAO extension - frees any allocated storage.
    void _reset (void);
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct UnboundedUnionMessage;

  typedef
    ::TAO_Var_Var_T<
        UnboundedUnionMessage
      >
    UnboundedUnionMessage_var;

  typedef
    ::TAO_Out_T<
        UnboundedUnionMessage
      >
    UnboundedUnionMessage_out;

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct KeyTest_Export UnboundedUnionMessage
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef UnboundedUnionMessage_var _var_type;
    typedef UnboundedUnionMessage_out _out_type;
    
    

    Bound::UnboundedUnion union_field;
  };

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  struct RecursiveMessage;

  typedef
    ::TAO_Var_Var_T<
        RecursiveMessage
      >
    RecursiveMessage_var;

  typedef
    ::TAO_Out_T<
        RecursiveMessage
      >
    RecursiveMessage_out;

  // TAO_IDL - Generated from
  // be/be_visitor_sequence/sequence_ch.cpp:102

#if !defined (_BOUND_SINGLEMESSAGESEQ_CH_)
#define _BOUND_SINGLEMESSAGESEQ_CH_

  class SingleMessageSeq;

  typedef
    ::TAO_VarSeq_Var_T<
        SingleMessageSeq
      >
    SingleMessageSeq_var;

  typedef
    ::TAO_Seq_Out_T<
        SingleMessageSeq
      >
    SingleMessageSeq_out;

  class KeyTest_Export SingleMessageSeq
    : public
        ::TAO::bounded_value_sequence<
            RecursiveMessage,
            1
          >
  {
  public:
    SingleMessageSeq (void);
    SingleMessageSeq (
      ::CORBA::ULong length,
      RecursiveMessage* buffer,
      ::CORBA::Boolean release = false);
    SingleMessageSeq (const SingleMessageSeq &);
    virtual ~SingleMessageSeq (void);
    

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef SingleMessageSeq_var _var_type;
    typedef SingleMessageSeq_out _out_type;
  };

#endif /* end #if !defined */

  // TAO_IDL - Generated from
  // be/be_type.cpp:261

  class NestedMessageUnion;

  typedef
    ::TAO_Var_Var_T<
        NestedMessageUnion
      >
    NestedMessageUnion_var;

  typedef
    ::TAO_Out_T<
        NestedMessageUnion
      >
    NestedMessageUnion_out;

  class KeyTest_Export NestedMessageUnion
  {
  public:
    NestedMessageUnion (void);
    NestedMessageUnion (const NestedMessageUnion &);
    ~NestedMessageUnion (void);

    NestedMessageUnion &operator= (const NestedMessageUnion &);

    // TAO_IDL - Generated from
    // be/be_visitor_union/discriminant_ch.cpp:103

    void _d ( ::CORBA::Short);
    ::CORBA::Short _d (void) const;

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef NestedMessageUnion_var _var_type;
    typedef NestedMessageUnion_out _out_type;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:551

    void message (const Bound::SingleMessageSeq &);
    const Bound::SingleMessageSeq &message (void) const;
    Bound::SingleMessageSeq &message (void);

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void long_field ( ::CORBA::Long);
    ::CORBA::Long long_field (void) const;

    // TAO_IDL - Generated from
    // be/be_visitor_union_branch/public_ch.cpp:452

    void short_field ( ::CORBA::Short);
    ::CORBA::Short short_field (void) const;
  private:
    ::CORBA::Short disc_;

    union
    {
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:447
      Bound::SingleMessageSeq *message_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Long long_field_;
      // TAO_IDL - Generated from
      // be/be_visitor_union_branch/private_ch.cpp:380
      ::CORBA::Short short_field_;
    } u_;

    /// TAO extension - frees any allocated storage.
    void _reset (void);
  };

  // TAO_IDL - Generated from
  // be/be_visitor_structure/structure_ch.cpp:51

  struct KeyTest_Export RecursiveMessage
  {

    // TAO_IDL - Generated from
    // be/be_type.cpp:307

    
    typedef RecursiveMessage_var _var_type;
    typedef RecursiveMessage_out _out_type;
    
    

    Bound::NestedMessageUnion union_field;
    ::CORBA::Float float_field;
  };

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module Bound

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Bound::BoundedFloatSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::BoundedFloatSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Bound::BoundedSequenceOfBoundedMessage>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::BoundedSequenceOfBoundedMessage,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Bound::UnboundedFloatSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::UnboundedFloatSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Bound::UnboundedSequenceOfBoundedMessage>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::UnboundedSequenceOfBoundedMessage,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Bound::BoundedStringSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::BoundedStringSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Bound::BoundedSequenceOfUnboundedMessage>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::BoundedSequenceOfUnboundedMessage,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Bound::UnboundedStringSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::UnboundedStringSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Bound::UnboundedSequenceOfUnboundedMessage>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::UnboundedSequenceOfUnboundedMessage,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1058

  template<>
  class Arg_Traits< ::Bound::BoundedUnion>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Bound::BoundedUnion,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Bound::BoundedUnionMessage>
    : public
        Fixed_Size_Arg_Traits_T<
            ::Bound::BoundedUnionMessage,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1058

  template<>
  class Arg_Traits< ::Bound::UnboundedUnion>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::UnboundedUnion,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Bound::UnboundedUnionMessage>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::UnboundedUnionMessage,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:685

  template<>
  class Arg_Traits< ::Bound::SingleMessageSeq>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::SingleMessageSeq,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:1058

  template<>
  class Arg_Traits< ::Bound::NestedMessageUnion>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::NestedMessageUnion,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };

  // TAO_IDL - Generated from
  // be/be_visitor_arg_traits.cpp:947

  template<>
  class Arg_Traits< ::Bound::RecursiveMessage>
    : public
        Var_Size_Arg_Traits_T<
            ::Bound::RecursiveMessage,
            TAO::Any_Insert_Policy_Noop
          >
  {
  };
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Bound_BoundedFloatSeq_H_
#define _TAO_CDR_OP_Bound_BoundedFloatSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


KeyTest_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Bound::BoundedFloatSeq &_tao_sequence);
KeyTest_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Bound::BoundedFloatSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Bound_BoundedFloatSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::BoundedSequenceOfBoundedMessage &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::BoundedSequenceOfBoundedMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Bound_UnboundedFloatSeq_H_
#define _TAO_CDR_OP_Bound_UnboundedFloatSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


KeyTest_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Bound::UnboundedFloatSeq &_tao_sequence);
KeyTest_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Bound::UnboundedFloatSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Bound_UnboundedFloatSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::UnboundedSequenceOfBoundedMessage &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::UnboundedSequenceOfBoundedMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Bound_BoundedStringSeq_H_
#define _TAO_CDR_OP_Bound_BoundedStringSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


KeyTest_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Bound::BoundedStringSeq &_tao_sequence);
KeyTest_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Bound::BoundedStringSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Bound_BoundedStringSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::BoundedSequenceOfUnboundedMessage &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::BoundedSequenceOfUnboundedMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Bound_UnboundedStringSeq_H_
#define _TAO_CDR_OP_Bound_UnboundedStringSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


KeyTest_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Bound::UnboundedStringSeq &_tao_sequence);
KeyTest_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Bound::UnboundedStringSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Bound_UnboundedStringSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::UnboundedSequenceOfUnboundedMessage &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::UnboundedSequenceOfUnboundedMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::BoundedUnion &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::BoundedUnion &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::BoundedUnionMessage &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::BoundedUnionMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::UnboundedUnion &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::UnboundedUnion &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::UnboundedUnionMessage &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::UnboundedUnionMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_ch.cpp:68

#if !defined _TAO_CDR_OP_Bound_SingleMessageSeq_H_
#define _TAO_CDR_OP_Bound_SingleMessageSeq_H_
TAO_BEGIN_VERSIONED_NAMESPACE_DECL


KeyTest_Export ::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Bound::SingleMessageSeq &_tao_sequence);
KeyTest_Export ::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Bound::SingleMessageSeq &_tao_sequence);

TAO_END_VERSIONED_NAMESPACE_DECL



#endif /* _TAO_CDR_OP_Bound_SingleMessageSeq_H_ */

// TAO_IDL - Generated from
// be/be_visitor_union/cdr_op_ch.cpp:41


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::NestedMessageUnion &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::NestedMessageUnion &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_ch.cpp:46


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

KeyTest_Export ::CORBA::Boolean operator<< (TAO_OutputCDR &, const Bound::RecursiveMessage &);
KeyTest_Export ::CORBA::Boolean operator>> (TAO_InputCDR &, Bound::RecursiveMessage &);

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "BoundTest2C.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

