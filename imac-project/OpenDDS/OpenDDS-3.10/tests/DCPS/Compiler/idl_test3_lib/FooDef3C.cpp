// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "FooDef3C.h"
#include "tao/CDR.h"
#include "tao/ORB_Core.h"

#if !defined (__ACE_INLINE__)
#include "FooDef3C.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:73

#if !defined (_XYZ_SEQOFBOOLEAN2_CS_)
#define _XYZ_SEQOFBOOLEAN2_CS_

Xyz::SeqOfBoolean2::SeqOfBoolean2 (void)
{}

Xyz::SeqOfBoolean2::SeqOfBoolean2 (
    ::CORBA::ULong length,
    ::CORBA::Boolean * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::bounded_value_sequence<
        ::CORBA::Boolean,
        3
      >
    (length, buffer, release)
{}

Xyz::SeqOfBoolean2::SeqOfBoolean2 (
    const SeqOfBoolean2 &seq)
  : ::TAO::bounded_value_sequence<
        ::CORBA::Boolean,
        3
      > (seq)
{}

Xyz::SeqOfBoolean2::~SeqOfBoolean2 (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:73

#if !defined (_XYZ_SEQOFSTRING2_CS_)
#define _XYZ_SEQOFSTRING2_CS_

Xyz::SeqOfString2::SeqOfString2 (void)
{}

Xyz::SeqOfString2::SeqOfString2 (
    ::CORBA::ULong length,
    ::CORBA::Char * * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::bounded_basic_string_sequence<char, 3>
    (length, buffer, release)
{}

Xyz::SeqOfString2::SeqOfString2 (
    const SeqOfString2 &seq)
  : ::TAO::bounded_basic_string_sequence<char, 3> (seq)
{}

Xyz::SeqOfString2::~SeqOfString2 (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:73

#if !defined (_XYZ_SEQOFCHAR2_CS_)
#define _XYZ_SEQOFCHAR2_CS_

Xyz::SeqOfChar2::SeqOfChar2 (void)
{}

Xyz::SeqOfChar2::SeqOfChar2 (
    ::CORBA::ULong length,
    ::CORBA::Char * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::bounded_value_sequence<
        ::CORBA::Char,
        3
      >
    (length, buffer, release)
{}

Xyz::SeqOfChar2::SeqOfChar2 (
    const SeqOfChar2 &seq)
  : ::TAO::bounded_value_sequence<
        ::CORBA::Char,
        3
      > (seq)
{}

Xyz::SeqOfChar2::~SeqOfChar2 (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:73

#if !defined (_XYZ_SEQOFOCTET2_CS_)
#define _XYZ_SEQOFOCTET2_CS_

Xyz::SeqOfOctet2::SeqOfOctet2 (void)
{}

Xyz::SeqOfOctet2::SeqOfOctet2 (
    ::CORBA::ULong length,
    ::CORBA::Octet * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::bounded_value_sequence<
        ::CORBA::Octet,
        3
      >
    (length, buffer, release)
{}

Xyz::SeqOfOctet2::SeqOfOctet2 (
    const SeqOfOctet2 &seq)
  : ::TAO::bounded_value_sequence<
        ::CORBA::Octet,
        3
      > (seq)
{}

Xyz::SeqOfOctet2::~SeqOfOctet2 (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:73

#if !defined (_XYZ_SEQOFLONG2_CS_)
#define _XYZ_SEQOFLONG2_CS_

Xyz::SeqOfLong2::SeqOfLong2 (void)
{}

Xyz::SeqOfLong2::SeqOfLong2 (
    ::CORBA::ULong length,
    ::CORBA::Long * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::bounded_value_sequence<
        ::CORBA::Long,
        3
      >
    (length, buffer, release)
{}

Xyz::SeqOfLong2::SeqOfLong2 (
    const SeqOfLong2 &seq)
  : ::TAO::bounded_value_sequence<
        ::CORBA::Long,
        3
      > (seq)
{}

Xyz::SeqOfLong2::~SeqOfLong2 (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_sequence/sequence_cs.cpp:73

#if !defined (_XYZ_SEQOFANENUM2_CS_)
#define _XYZ_SEQOFANENUM2_CS_

Xyz::SeqOfAnEnum2::SeqOfAnEnum2 (void)
{}

Xyz::SeqOfAnEnum2::SeqOfAnEnum2 (
    ::CORBA::ULong length,
    Xyz::AnEnum * buffer,
    ::CORBA::Boolean release
  )
  : ::TAO::bounded_value_sequence<
        AnEnum,
        3
      >
    (length, buffer, release)
{}

Xyz::SeqOfAnEnum2::SeqOfAnEnum2 (
    const SeqOfAnEnum2 &seq)
  : ::TAO::bounded_value_sequence<
        AnEnum,
        3
      > (seq)
{}

Xyz::SeqOfAnEnum2::~SeqOfAnEnum2 (void)
{}

#endif /* end #if !defined */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_Xyz_SeqOfBoolean2_CPP_
#define _TAO_CDR_OP_Xyz_SeqOfBoolean2_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::SeqOfBoolean2 &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::SeqOfBoolean2 &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Xyz_SeqOfBoolean2_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_Xyz_SeqOfString2_CPP_
#define _TAO_CDR_OP_Xyz_SeqOfString2_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::SeqOfString2 &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::SeqOfString2 &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Xyz_SeqOfString2_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_Xyz_SeqOfChar2_CPP_
#define _TAO_CDR_OP_Xyz_SeqOfChar2_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::SeqOfChar2 &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::SeqOfChar2 &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Xyz_SeqOfChar2_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_Xyz_SeqOfOctet2_CPP_
#define _TAO_CDR_OP_Xyz_SeqOfOctet2_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::SeqOfOctet2 &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::SeqOfOctet2 &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Xyz_SeqOfOctet2_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_Xyz_SeqOfLong2_CPP_
#define _TAO_CDR_OP_Xyz_SeqOfLong2_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::SeqOfLong2 &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::SeqOfLong2 &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Xyz_SeqOfLong2_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_sequence/cdr_op_cs.cpp:96
#if !defined _TAO_CDR_OP_Xyz_SeqOfAnEnum2_CPP_
#define _TAO_CDR_OP_Xyz_SeqOfAnEnum2_CPP_

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::SeqOfAnEnum2 &_tao_sequence)
{
  return TAO::marshal_sequence(strm, _tao_sequence);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::SeqOfAnEnum2 &_tao_sequence)
{
  return TAO::demarshal_sequence(strm, _tao_sequence);
}


TAO_END_VERSIONED_NAMESPACE_DECL

#endif /* _TAO_CDR_OP_Xyz_SeqOfAnEnum2_CPP_ */

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::SimpleStruct &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.simple) &&
    (strm << _tao_aggregate.ss1);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::SimpleStruct &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.simple) &&
    (strm >> _tao_aggregate.ss1);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::StructOfArrayOfSeqOfBoolean &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfBoolean_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfBoolean_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfBoolean_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm << _tao_aggregate_f);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::StructOfArrayOfSeqOfBoolean &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfBoolean_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfBoolean_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfBoolean_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm >> _tao_aggregate_f);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::StructOfArrayOfSeqOfString &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfString_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfString_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfString_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm << _tao_aggregate_f);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::StructOfArrayOfSeqOfString &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfString_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfString_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfString_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm >> _tao_aggregate_f);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::StructOfArrayOfSeqOfChar &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfChar_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfChar_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfChar_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm << _tao_aggregate_f);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::StructOfArrayOfSeqOfChar &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfChar_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfChar_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfChar_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm >> _tao_aggregate_f);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::StructOfArrayOfSeqOfOctet &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfOctet_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfOctet_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfOctet_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm << _tao_aggregate_f);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::StructOfArrayOfSeqOfOctet &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfOctet_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfOctet_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfOctet_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm >> _tao_aggregate_f);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::StructOfArrayOfSeqOfLong &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfLong_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfLong_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfLong_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm << _tao_aggregate_f);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::StructOfArrayOfSeqOfLong &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfLong_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfLong_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfLong_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm >> _tao_aggregate_f);
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const Xyz::StructOfArrayOfSeqOfAnEnum &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfAnEnum_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfAnEnum_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfAnEnum_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm << _tao_aggregate_f);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    Xyz::StructOfArrayOfSeqOfAnEnum &_tao_aggregate)
{
  Xyz::ArrayOfSeqOfAnEnum_forany _tao_aggregate_f
      #if defined __IBMCPP__ && __IBMCPP__ <= 800
      ((Xyz::ArrayOfSeqOfAnEnum_slice*) (
      #else
      (const_cast<
          Xyz::ArrayOfSeqOfAnEnum_slice*> (
      #endif
          _tao_aggregate.f
        )
    );
  return
    (strm >> _tao_aggregate_f);
}

TAO_END_VERSIONED_NAMESPACE_DECL



