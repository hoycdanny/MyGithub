// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "NscTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "NscTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for N::DDS::G::STypeSupport.

N::DDS::G::STypeSupport_ptr
TAO::Objref_Traits<N::DDS::G::STypeSupport>::duplicate (
    N::DDS::G::STypeSupport_ptr p)
{
  return N::DDS::G::STypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<N::DDS::G::STypeSupport>::release (
    N::DDS::G::STypeSupport_ptr p)
{
  ::CORBA::release (p);
}

N::DDS::G::STypeSupport_ptr
TAO::Objref_Traits<N::DDS::G::STypeSupport>::nil (void)
{
  return N::DDS::G::STypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<N::DDS::G::STypeSupport>::marshal (
    const N::DDS::G::STypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

N::DDS::G::STypeSupport::STypeSupport (void)
{}

N::DDS::G::STypeSupport::~STypeSupport (void)
{
}

N::DDS::G::STypeSupport_ptr
N::DDS::G::STypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return STypeSupport::_duplicate (
      dynamic_cast<STypeSupport_ptr> (_tao_objref)
    );
}

N::DDS::G::STypeSupport_ptr
N::DDS::G::STypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return STypeSupport::_duplicate (
      dynamic_cast<STypeSupport_ptr> (_tao_objref)
    );
}

N::DDS::G::STypeSupport_ptr
N::DDS::G::STypeSupport::_nil (void)
{
  return 0;
}

N::DDS::G::STypeSupport_ptr
N::DDS::G::STypeSupport::_duplicate (STypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
N::DDS::G::STypeSupport::_tao_release (STypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
N::DDS::G::STypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:N/DDS/G/STypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* N::DDS::G::STypeSupport::_interface_repository_id (void) const
{
  return "IDL:N/DDS/G/STypeSupport:1.0";
}

::CORBA::Boolean
N::DDS::G::STypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for N::DDS::G::SDataWriter.

N::DDS::G::SDataWriter_ptr
TAO::Objref_Traits<N::DDS::G::SDataWriter>::duplicate (
    N::DDS::G::SDataWriter_ptr p)
{
  return N::DDS::G::SDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<N::DDS::G::SDataWriter>::release (
    N::DDS::G::SDataWriter_ptr p)
{
  ::CORBA::release (p);
}

N::DDS::G::SDataWriter_ptr
TAO::Objref_Traits<N::DDS::G::SDataWriter>::nil (void)
{
  return N::DDS::G::SDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<N::DDS::G::SDataWriter>::marshal (
    const N::DDS::G::SDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

N::DDS::G::SDataWriter::SDataWriter (void)
{}

N::DDS::G::SDataWriter::~SDataWriter (void)
{
}

N::DDS::G::SDataWriter_ptr
N::DDS::G::SDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SDataWriter::_duplicate (
      dynamic_cast<SDataWriter_ptr> (_tao_objref)
    );
}

N::DDS::G::SDataWriter_ptr
N::DDS::G::SDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SDataWriter::_duplicate (
      dynamic_cast<SDataWriter_ptr> (_tao_objref)
    );
}

N::DDS::G::SDataWriter_ptr
N::DDS::G::SDataWriter::_nil (void)
{
  return 0;
}

N::DDS::G::SDataWriter_ptr
N::DDS::G::SDataWriter::_duplicate (SDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
N::DDS::G::SDataWriter::_tao_release (SDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
N::DDS::G::SDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:N/DDS/G/SDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* N::DDS::G::SDataWriter::_interface_repository_id (void) const
{
  return "IDL:N/DDS/G/SDataWriter:1.0";
}

::CORBA::Boolean
N::DDS::G::SDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for N::DDS::G::SDataReader.

N::DDS::G::SDataReader_ptr
TAO::Objref_Traits<N::DDS::G::SDataReader>::duplicate (
    N::DDS::G::SDataReader_ptr p)
{
  return N::DDS::G::SDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<N::DDS::G::SDataReader>::release (
    N::DDS::G::SDataReader_ptr p)
{
  ::CORBA::release (p);
}

N::DDS::G::SDataReader_ptr
TAO::Objref_Traits<N::DDS::G::SDataReader>::nil (void)
{
  return N::DDS::G::SDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<N::DDS::G::SDataReader>::marshal (
    const N::DDS::G::SDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

N::DDS::G::SDataReader::SDataReader (void)
{}

N::DDS::G::SDataReader::~SDataReader (void)
{
}

N::DDS::G::SDataReader_ptr
N::DDS::G::SDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SDataReader::_duplicate (
      dynamic_cast<SDataReader_ptr> (_tao_objref)
    );
}

N::DDS::G::SDataReader_ptr
N::DDS::G::SDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return SDataReader::_duplicate (
      dynamic_cast<SDataReader_ptr> (_tao_objref)
    );
}

N::DDS::G::SDataReader_ptr
N::DDS::G::SDataReader::_nil (void)
{
  return 0;
}

N::DDS::G::SDataReader_ptr
N::DDS::G::SDataReader::_duplicate (SDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
N::DDS::G::SDataReader::_tao_release (SDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
N::DDS::G::SDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:N/DDS/G/SDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* N::DDS::G::SDataReader::_interface_repository_id (void) const
{
  return "IDL:N/DDS/G/SDataReader:1.0";
}

::CORBA::Boolean
N::DDS::G::SDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

