// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "TestTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "TestTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Test::DataTypeSupport.

Test::DataTypeSupport_ptr
TAO::Objref_Traits<Test::DataTypeSupport>::duplicate (
    Test::DataTypeSupport_ptr p)
{
  return Test::DataTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<Test::DataTypeSupport>::release (
    Test::DataTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

Test::DataTypeSupport_ptr
TAO::Objref_Traits<Test::DataTypeSupport>::nil (void)
{
  return Test::DataTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Test::DataTypeSupport>::marshal (
    const Test::DataTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Test::DataTypeSupport::DataTypeSupport (void)
{}

Test::DataTypeSupport::~DataTypeSupport (void)
{
}

Test::DataTypeSupport_ptr
Test::DataTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DataTypeSupport::_duplicate (
      dynamic_cast<DataTypeSupport_ptr> (_tao_objref)
    );
}

Test::DataTypeSupport_ptr
Test::DataTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DataTypeSupport::_duplicate (
      dynamic_cast<DataTypeSupport_ptr> (_tao_objref)
    );
}

Test::DataTypeSupport_ptr
Test::DataTypeSupport::_nil (void)
{
  return 0;
}

Test::DataTypeSupport_ptr
Test::DataTypeSupport::_duplicate (DataTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Test::DataTypeSupport::_tao_release (DataTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Test::DataTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Test/DataTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Test::DataTypeSupport::_interface_repository_id (void) const
{
  return "IDL:Test/DataTypeSupport:1.0";
}

::CORBA::Boolean
Test::DataTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Test::DataDataWriter.

Test::DataDataWriter_ptr
TAO::Objref_Traits<Test::DataDataWriter>::duplicate (
    Test::DataDataWriter_ptr p)
{
  return Test::DataDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<Test::DataDataWriter>::release (
    Test::DataDataWriter_ptr p)
{
  ::CORBA::release (p);
}

Test::DataDataWriter_ptr
TAO::Objref_Traits<Test::DataDataWriter>::nil (void)
{
  return Test::DataDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Test::DataDataWriter>::marshal (
    const Test::DataDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Test::DataDataWriter::DataDataWriter (void)
{}

Test::DataDataWriter::~DataDataWriter (void)
{
}

Test::DataDataWriter_ptr
Test::DataDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DataDataWriter::_duplicate (
      dynamic_cast<DataDataWriter_ptr> (_tao_objref)
    );
}

Test::DataDataWriter_ptr
Test::DataDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DataDataWriter::_duplicate (
      dynamic_cast<DataDataWriter_ptr> (_tao_objref)
    );
}

Test::DataDataWriter_ptr
Test::DataDataWriter::_nil (void)
{
  return 0;
}

Test::DataDataWriter_ptr
Test::DataDataWriter::_duplicate (DataDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Test::DataDataWriter::_tao_release (DataDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Test::DataDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Test/DataDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Test::DataDataWriter::_interface_repository_id (void) const
{
  return "IDL:Test/DataDataWriter:1.0";
}

::CORBA::Boolean
Test::DataDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for Test::DataDataReader.

Test::DataDataReader_ptr
TAO::Objref_Traits<Test::DataDataReader>::duplicate (
    Test::DataDataReader_ptr p)
{
  return Test::DataDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<Test::DataDataReader>::release (
    Test::DataDataReader_ptr p)
{
  ::CORBA::release (p);
}

Test::DataDataReader_ptr
TAO::Objref_Traits<Test::DataDataReader>::nil (void)
{
  return Test::DataDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<Test::DataDataReader>::marshal (
    const Test::DataDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

Test::DataDataReader::DataDataReader (void)
{}

Test::DataDataReader::~DataDataReader (void)
{
}

Test::DataDataReader_ptr
Test::DataDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DataDataReader::_duplicate (
      dynamic_cast<DataDataReader_ptr> (_tao_objref)
    );
}

Test::DataDataReader_ptr
Test::DataDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return DataDataReader::_duplicate (
      dynamic_cast<DataDataReader_ptr> (_tao_objref)
    );
}

Test::DataDataReader_ptr
Test::DataDataReader::_nil (void)
{
  return 0;
}

Test::DataDataReader_ptr
Test::DataDataReader::_duplicate (DataDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
Test::DataDataReader::_tao_release (DataDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
Test::DataDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:Test/DataDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* Test::DataDataReader::_interface_repository_id (void) const
{
  return "IDL:Test/DataDataReader:1.0";
}

::CORBA::Boolean
Test::DataDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

