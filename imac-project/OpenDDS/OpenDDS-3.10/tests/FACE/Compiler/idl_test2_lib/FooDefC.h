/* -*- C++ -*- */
/* Generated by /Users/yc/MyGithub/imac-project/OpenDDS/OpenDDS-3.10/bin/opendds_idl version 3.10 (ACE version 6.2a_p11) running on input file ../../../DCPS/Compiler/idl_test2_lib/FooDef.idl */
#ifndef OPENDDS_IDL_GENERATED_FOODEFC_H_GR4LJS
#define OPENDDS_IDL_GENERATED_FOODEFC_H_GR4LJS
#include <tao/orbconf.h>
#include <tao/Basic_Types.h>
#include <ace/CDR_Stream.h>
#include <tao/VarOut_T.h>
#include "FACE/StringManager.h"
#include "FACE/types.hpp"
#include "foolib_export.h"


/* Begin MODULE: CORBA */


/* End MODULE: CORBA */


/* Begin MODULE: Xyz */



/* Begin STRUCT: Foo */

namespace Xyz {
struct Foo;
typedef ::TAO_Fixed_Var_T<Foo> Foo_var;
typedef Foo& Foo_out;

struct FooLib_Export Foo
{
  typedef Foo_var _var_type;
  typedef Foo_out _out_type;

  ::FACE::Long a_long_value;
  ::FACE::Long handle_value;
  ::FACE::Long sample_sequence;
  ::FACE::Long writer_id;

  bool operator==(const Foo& rhs) const;
  bool operator!=(const Foo& rhs) const { return !(*this == rhs); }
  OPENDDS_POOL_ALLOCATION_HOOKS
};

FooLib_Export ACE_CDR::Boolean operator<< (ACE_OutputCDR& os, const Foo& x);

FooLib_Export ACE_CDR::Boolean operator>> (ACE_InputCDR& os, Foo& x);

}

/* End STRUCT: Foo */

/* End MODULE: Xyz */


/* Begin STRUCT: Bar */

struct Bar;
typedef ::TAO_Fixed_Var_T<Bar> Bar_var;
typedef Bar& Bar_out;

struct FooLib_Export Bar
{
  typedef Bar_var _var_type;
  typedef Bar_out _out_type;

  ::FACE::UnsignedLong data;

  bool operator==(const Bar& rhs) const;
  bool operator!=(const Bar& rhs) const { return !(*this == rhs); }
  OPENDDS_POOL_ALLOCATION_HOOKS
};

FooLib_Export ACE_CDR::Boolean operator<< (ACE_OutputCDR& os, const Bar& x);

FooLib_Export ACE_CDR::Boolean operator>> (ACE_InputCDR& os, Bar& x);


/* End STRUCT: Bar */
#endif /* OPENDDS_IDL_GENERATED_FOODEFC_H_GR4LJS */
