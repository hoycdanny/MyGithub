/* Generated by /Users/yc/MyGithub/imac-project/OpenDDS/OpenDDS-3.10/bin/opendds_idl version 3.10 (ACE version 6.2a_p11) running on input file Fixed.idl */
#include "Fixed_TS.hpp"
#include "FixedTypeSupportImpl.h"
#include "dds/FACE/FaceTSS.h"

namespace FACE { namespace TS {

void Receive_Message(CONNECTION_ID_TYPE connection_id,
                     TIMEOUT_TYPE timeout,
                     TRANSACTION_ID_TYPE& transaction_id,
                     M1::S1& message,
                     MESSAGE_SIZE_TYPE message_size,
                     RETURN_CODE_TYPE& return_code) {
  OpenDDS::FaceTSS::receive_message(connection_id, timeout,
                                    transaction_id, message,
                                    message_size, return_code);
}

void Send_Message(CONNECTION_ID_TYPE connection_id,
                  TIMEOUT_TYPE timeout,
                  TRANSACTION_ID_TYPE& transaction_id,
                  M1::S1& message,
                  MESSAGE_SIZE_TYPE& message_size,
                  RETURN_CODE_TYPE& return_code) {
  OpenDDS::FaceTSS::send_message(connection_id, timeout,
                                 transaction_id, message,
                                 message_size, return_code);
}

void Register_Callback(CONNECTION_ID_TYPE connection_id,
                       const WAITSET_TYPE waitset,
                       Read_Callback::send_event_M1_S1_Ptr data_callback,
                       MESSAGE_SIZE_TYPE max_message_size,
                       RETURN_CODE_TYPE& return_code) {
  OpenDDS::FaceTSS::register_callback(connection_id, waitset,
                                      data_callback,
                                      max_message_size, return_code);
}

struct M1_S1_Initializer {
  M1_S1_Initializer()
  {
    M1::S1TypeSupport_var ts = new M1::S1TypeSupportImpl;
    ts->register_type(0, "");
  }
} init_M1_S1;

}}
