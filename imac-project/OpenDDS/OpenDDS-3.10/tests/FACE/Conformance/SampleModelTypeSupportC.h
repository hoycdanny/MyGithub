// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:152

#ifndef _TAO_IDL_SAMPLEMODELTYPESUPPORTC_WJGEPI_H_
#define _TAO_IDL_SAMPLEMODELTYPESUPPORTC_WJGEPI_H_

#include /**/ "ace/pre.h"


#include /**/ "ace/config-all.h"

#if !defined (ACE_LACKS_PRAGMA_ONCE)
# pragma once
#endif /* ACE_LACKS_PRAGMA_ONCE */


#include /**/ "SampleModel_Export.h"
#include "tao/ORB.h"
#include "tao/SystemException.h"
#include "tao/Basic_Types.h"
#include "tao/ORB_Constants.h"
#include "dds/DCPS/ZeroCopyInfoSeq_T.h"
#include "dds/DCPS/ZeroCopySeq_T.h"
#include "tao/Object.h"
#include "tao/String_Manager_T.h"
#include "tao/Sequence_T.h"
#include "tao/Objref_VarOut_T.h"
#include "tao/Seq_Var_T.h"
#include "tao/Seq_Out_T.h"
#include "tao/Arg_Traits_T.h"
#include "tao/Basic_Arguments.h"
#include "tao/Special_Basic_Arguments.h"
#include "tao/Any_Insert_Policy_T.h"
#include "tao/Fixed_Size_Argument_T.h"
#include "tao/Var_Size_Argument_T.h"
#include /**/ "tao/Version.h"
#include /**/ "tao/Versioned_Namespace.h"

#include "SampleModelC.h"
#include "dds/DdsDcpsInfrastructureC.h"
#include "dds/DdsDcpsPublicationC.h"
#include "dds/DdsDcpsSubscriptionExtC.h"
#include "dds/DdsDcpsTopicC.h"
#include "dds/DdsDcpsTypeSupportExtC.h"

#if TAO_MAJOR_VERSION != 2 || TAO_MINOR_VERSION != 2 || TAO_BETA_VERSION != 0
#error This file should be regenerated with TAO_IDL
#endif

#if defined (TAO_EXPORT_MACRO)
#undef TAO_EXPORT_MACRO
#endif
#define TAO_EXPORT_MACRO SampleModel_Export

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace FACE
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace DM
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< FACE::DM::EGI_Data, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> EGI_DataSeq;
    

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_FACE_DM_EGI_DATATYPESUPPORT__VAR_OUT_CH_)
#define _FACE_DM_EGI_DATATYPESUPPORT__VAR_OUT_CH_

    class EGI_DataTypeSupport;
    typedef EGI_DataTypeSupport *EGI_DataTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          EGI_DataTypeSupport
        >
      EGI_DataTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          EGI_DataTypeSupport
        >
      EGI_DataTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class SampleModel_Export EGI_DataTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef EGI_DataTypeSupport_ptr _ptr_type;
      typedef EGI_DataTypeSupport_var _var_type;
      typedef EGI_DataTypeSupport_out _out_type;

      // The static operations.
      static EGI_DataTypeSupport_ptr _duplicate (EGI_DataTypeSupport_ptr obj);

      static void _tao_release (EGI_DataTypeSupport_ptr obj);

      static EGI_DataTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static EGI_DataTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static EGI_DataTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      EGI_DataTypeSupport (void);

      

      virtual ~EGI_DataTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      EGI_DataTypeSupport (const EGI_DataTypeSupport &);

      void operator= (const EGI_DataTypeSupport &);
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_FACE_DM_EGI_DATADATAWRITER__VAR_OUT_CH_)
#define _FACE_DM_EGI_DATADATAWRITER__VAR_OUT_CH_

    class EGI_DataDataWriter;
    typedef EGI_DataDataWriter *EGI_DataDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          EGI_DataDataWriter
        >
      EGI_DataDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          EGI_DataDataWriter
        >
      EGI_DataDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class SampleModel_Export EGI_DataDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef EGI_DataDataWriter_ptr _ptr_type;
      typedef EGI_DataDataWriter_var _var_type;
      typedef EGI_DataDataWriter_out _out_type;

      // The static operations.
      static EGI_DataDataWriter_ptr _duplicate (EGI_DataDataWriter_ptr obj);

      static void _tao_release (EGI_DataDataWriter_ptr obj);

      static EGI_DataDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static EGI_DataDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static EGI_DataDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::FACE::DM::EGI_Data & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::FACE::DM::EGI_Data & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::FACE::DM::EGI_Data & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::FACE::DM::EGI_Data & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::FACE::DM::EGI_Data & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::FACE::DM::EGI_Data & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::FACE::DM::EGI_Data & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::FACE::DM::EGI_Data & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::FACE::DM::EGI_Data & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::FACE::DM::EGI_Data & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      EGI_DataDataWriter (void);

      

      virtual ~EGI_DataDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      EGI_DataDataWriter (const EGI_DataDataWriter &);

      void operator= (const EGI_DataDataWriter &);
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_FACE_DM_EGI_DATADATAREADER__VAR_OUT_CH_)
#define _FACE_DM_EGI_DATADATAREADER__VAR_OUT_CH_

    class EGI_DataDataReader;
    typedef EGI_DataDataReader *EGI_DataDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          EGI_DataDataReader
        >
      EGI_DataDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          EGI_DataDataReader
        >
      EGI_DataDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class SampleModel_Export EGI_DataDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef EGI_DataDataReader_ptr _ptr_type;
      typedef EGI_DataDataReader_var _var_type;
      typedef EGI_DataDataReader_out _out_type;

      // The static operations.
      static EGI_DataDataReader_ptr _duplicate (EGI_DataDataReader_ptr obj);

      static void _tao_release (EGI_DataDataReader_ptr obj);

      static EGI_DataDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static EGI_DataDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static EGI_DataDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::FACE::DM::EGI_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::FACE::DM::EGI_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::FACE::DM::EGI_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::FACE::DM::EGI_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::FACE::DM::EGI_Data & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::FACE::DM::EGI_Data & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::FACE::DM::EGI_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::FACE::DM::EGI_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::FACE::DM::EGI_DataSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::FACE::DM::EGI_DataSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::FACE::DM::EGI_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::FACE::DM::EGI_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::FACE::DM::EGI_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::FACE::DM::EGI_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::FACE::DM::EGI_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::FACE::DM::EGI_Data & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::FACE::DM::EGI_Data & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      EGI_DataDataReader (void);

      

      virtual ~EGI_DataDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      EGI_DataDataReader (const EGI_DataDataReader &);

      void operator= (const EGI_DataDataReader &);
    };
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module FACE::DM

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module FACE

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace FACE
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace DM
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< FACE::DM::IMU_Data, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> IMU_DataSeq;
    

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_FACE_DM_IMU_DATATYPESUPPORT__VAR_OUT_CH_)
#define _FACE_DM_IMU_DATATYPESUPPORT__VAR_OUT_CH_

    class IMU_DataTypeSupport;
    typedef IMU_DataTypeSupport *IMU_DataTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          IMU_DataTypeSupport
        >
      IMU_DataTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          IMU_DataTypeSupport
        >
      IMU_DataTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class SampleModel_Export IMU_DataTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef IMU_DataTypeSupport_ptr _ptr_type;
      typedef IMU_DataTypeSupport_var _var_type;
      typedef IMU_DataTypeSupport_out _out_type;

      // The static operations.
      static IMU_DataTypeSupport_ptr _duplicate (IMU_DataTypeSupport_ptr obj);

      static void _tao_release (IMU_DataTypeSupport_ptr obj);

      static IMU_DataTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static IMU_DataTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static IMU_DataTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      IMU_DataTypeSupport (void);

      

      virtual ~IMU_DataTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      IMU_DataTypeSupport (const IMU_DataTypeSupport &);

      void operator= (const IMU_DataTypeSupport &);
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_FACE_DM_IMU_DATADATAWRITER__VAR_OUT_CH_)
#define _FACE_DM_IMU_DATADATAWRITER__VAR_OUT_CH_

    class IMU_DataDataWriter;
    typedef IMU_DataDataWriter *IMU_DataDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          IMU_DataDataWriter
        >
      IMU_DataDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          IMU_DataDataWriter
        >
      IMU_DataDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class SampleModel_Export IMU_DataDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef IMU_DataDataWriter_ptr _ptr_type;
      typedef IMU_DataDataWriter_var _var_type;
      typedef IMU_DataDataWriter_out _out_type;

      // The static operations.
      static IMU_DataDataWriter_ptr _duplicate (IMU_DataDataWriter_ptr obj);

      static void _tao_release (IMU_DataDataWriter_ptr obj);

      static IMU_DataDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static IMU_DataDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static IMU_DataDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::FACE::DM::IMU_Data & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::FACE::DM::IMU_Data & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::FACE::DM::IMU_Data & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::FACE::DM::IMU_Data & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::FACE::DM::IMU_Data & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::FACE::DM::IMU_Data & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::FACE::DM::IMU_Data & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::FACE::DM::IMU_Data & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::FACE::DM::IMU_Data & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::FACE::DM::IMU_Data & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      IMU_DataDataWriter (void);

      

      virtual ~IMU_DataDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      IMU_DataDataWriter (const IMU_DataDataWriter &);

      void operator= (const IMU_DataDataWriter &);
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_FACE_DM_IMU_DATADATAREADER__VAR_OUT_CH_)
#define _FACE_DM_IMU_DATADATAREADER__VAR_OUT_CH_

    class IMU_DataDataReader;
    typedef IMU_DataDataReader *IMU_DataDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          IMU_DataDataReader
        >
      IMU_DataDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          IMU_DataDataReader
        >
      IMU_DataDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class SampleModel_Export IMU_DataDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef IMU_DataDataReader_ptr _ptr_type;
      typedef IMU_DataDataReader_var _var_type;
      typedef IMU_DataDataReader_out _out_type;

      // The static operations.
      static IMU_DataDataReader_ptr _duplicate (IMU_DataDataReader_ptr obj);

      static void _tao_release (IMU_DataDataReader_ptr obj);

      static IMU_DataDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static IMU_DataDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static IMU_DataDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::FACE::DM::IMU_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::FACE::DM::IMU_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::FACE::DM::IMU_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::FACE::DM::IMU_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::FACE::DM::IMU_Data & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::FACE::DM::IMU_Data & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::FACE::DM::IMU_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::FACE::DM::IMU_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::FACE::DM::IMU_DataSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::FACE::DM::IMU_DataSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::FACE::DM::IMU_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::FACE::DM::IMU_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::FACE::DM::IMU_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::FACE::DM::IMU_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::FACE::DM::IMU_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::FACE::DM::IMU_Data & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::FACE::DM::IMU_Data & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      IMU_DataDataReader (void);

      

      virtual ~IMU_DataDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      IMU_DataDataReader (const IMU_DataDataReader &);

      void operator= (const IMU_DataDataReader &);
    };
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module FACE::DM

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module FACE

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:38

namespace FACE
{

  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:38

  namespace DM
  {

    // TAO_IDL - Generated from
    // be/be_visitor_sequence/sequence_ch.cpp:102

    typedef ::TAO::DCPS::ZeroCopyDataSeq< FACE::DM::Nav_Data, DCPS_ZERO_COPY_SEQ_DEFAULT_SIZE> Nav_DataSeq;
    

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_FACE_DM_NAV_DATATYPESUPPORT__VAR_OUT_CH_)
#define _FACE_DM_NAV_DATATYPESUPPORT__VAR_OUT_CH_

    class Nav_DataTypeSupport;
    typedef Nav_DataTypeSupport *Nav_DataTypeSupport_ptr;

    typedef
      TAO_Objref_Var_T<
          Nav_DataTypeSupport
        >
      Nav_DataTypeSupport_var;
    
    typedef
      TAO_Objref_Out_T<
          Nav_DataTypeSupport
        >
      Nav_DataTypeSupport_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class SampleModel_Export Nav_DataTypeSupport
      : public virtual ::OpenDDS::DCPS::TypeSupport
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef Nav_DataTypeSupport_ptr _ptr_type;
      typedef Nav_DataTypeSupport_var _var_type;
      typedef Nav_DataTypeSupport_out _out_type;

      // The static operations.
      static Nav_DataTypeSupport_ptr _duplicate (Nav_DataTypeSupport_ptr obj);

      static void _tao_release (Nav_DataTypeSupport_ptr obj);

      static Nav_DataTypeSupport_ptr _narrow (::CORBA::Object_ptr obj);
      static Nav_DataTypeSupport_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static Nav_DataTypeSupport_ptr _nil (void);

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      Nav_DataTypeSupport (void);

      

      virtual ~Nav_DataTypeSupport (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      Nav_DataTypeSupport (const Nav_DataTypeSupport &);

      void operator= (const Nav_DataTypeSupport &);
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_FACE_DM_NAV_DATADATAWRITER__VAR_OUT_CH_)
#define _FACE_DM_NAV_DATADATAWRITER__VAR_OUT_CH_

    class Nav_DataDataWriter;
    typedef Nav_DataDataWriter *Nav_DataDataWriter_ptr;

    typedef
      TAO_Objref_Var_T<
          Nav_DataDataWriter
        >
      Nav_DataDataWriter_var;
    
    typedef
      TAO_Objref_Out_T<
          Nav_DataDataWriter
        >
      Nav_DataDataWriter_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class SampleModel_Export Nav_DataDataWriter
      : public virtual ::DDS::DataWriter
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef Nav_DataDataWriter_ptr _ptr_type;
      typedef Nav_DataDataWriter_var _var_type;
      typedef Nav_DataDataWriter_out _out_type;

      // The static operations.
      static Nav_DataDataWriter_ptr _duplicate (Nav_DataDataWriter_ptr obj);

      static void _tao_release (Nav_DataDataWriter_ptr obj);

      static Nav_DataDataWriter_ptr _narrow (::CORBA::Object_ptr obj);
      static Nav_DataDataWriter_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static Nav_DataDataWriter_ptr _nil (void);

      virtual ::DDS::InstanceHandle_t register_instance (
        const ::FACE::DM::Nav_Data & instance) = 0;

      virtual ::DDS::InstanceHandle_t register_instance_w_timestamp (
        const ::FACE::DM::Nav_Data & instance,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance (
        const ::FACE::DM::Nav_Data & instance,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t unregister_instance_w_timestamp (
        const ::FACE::DM::Nav_Data & instance,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & timestamp) = 0;

      virtual ::DDS::ReturnCode_t write (
        const ::FACE::DM::Nav_Data & instance_data,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::ReturnCode_t write_w_timestamp (
        const ::FACE::DM::Nav_Data & instance_data,
        ::DDS::InstanceHandle_t handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t dispose (
        const ::FACE::DM::Nav_Data & instance_data,
        ::DDS::InstanceHandle_t instance_handle) = 0;

      virtual ::DDS::ReturnCode_t dispose_w_timestamp (
        const ::FACE::DM::Nav_Data & instance_data,
        ::DDS::InstanceHandle_t instance_handle,
        const ::DDS::Time_t & source_timestamp) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::FACE::DM::Nav_Data & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::FACE::DM::Nav_Data & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      Nav_DataDataWriter (void);

      

      virtual ~Nav_DataDataWriter (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      Nav_DataDataWriter (const Nav_DataDataWriter &);

      void operator= (const Nav_DataDataWriter &);
    };

    // TAO_IDL - Generated from
    // be/be_interface.cpp:751

#if !defined (_FACE_DM_NAV_DATADATAREADER__VAR_OUT_CH_)
#define _FACE_DM_NAV_DATADATAREADER__VAR_OUT_CH_

    class Nav_DataDataReader;
    typedef Nav_DataDataReader *Nav_DataDataReader_ptr;

    typedef
      TAO_Objref_Var_T<
          Nav_DataDataReader
        >
      Nav_DataDataReader_var;
    
    typedef
      TAO_Objref_Out_T<
          Nav_DataDataReader
        >
      Nav_DataDataReader_out;

#endif /* end #if !defined */

    // TAO_IDL - Generated from
    // be/be_visitor_interface/interface_ch.cpp:43

    class SampleModel_Export Nav_DataDataReader
      : public virtual ::OpenDDS::DCPS::DataReaderEx
    
    {
    public:

      // TAO_IDL - Generated from
      // be/be_type.cpp:307

      typedef Nav_DataDataReader_ptr _ptr_type;
      typedef Nav_DataDataReader_var _var_type;
      typedef Nav_DataDataReader_out _out_type;

      // The static operations.
      static Nav_DataDataReader_ptr _duplicate (Nav_DataDataReader_ptr obj);

      static void _tao_release (Nav_DataDataReader_ptr obj);

      static Nav_DataDataReader_ptr _narrow (::CORBA::Object_ptr obj);
      static Nav_DataDataReader_ptr _unchecked_narrow (::CORBA::Object_ptr obj);
      static Nav_DataDataReader_ptr _nil (void);

      virtual ::DDS::ReturnCode_t read (
        ::FACE::DM::Nav_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take (
        ::FACE::DM::Nav_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_w_condition (
        ::FACE::DM::Nav_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_w_condition (
        ::FACE::DM::Nav_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_sample (
        ::FACE::DM::Nav_Data & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t take_next_sample (
        ::FACE::DM::Nav_Data & received_data,
        ::DDS::SampleInfo & sample_info) = 0;

      virtual ::DDS::ReturnCode_t read_instance (
        ::FACE::DM::Nav_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_instance (
        ::FACE::DM::Nav_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_instance_w_condition (
        ::FACE::DM::Nav_DataSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_instance_w_condition (
        ::FACE::DM::Nav_DataSeq & received_data,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance (
        ::FACE::DM::Nav_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance (
        ::FACE::DM::Nav_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t a_handle,
        ::DDS::SampleStateMask sample_states,
        ::DDS::ViewStateMask view_states,
        ::DDS::InstanceStateMask instance_states) = 0;

      virtual ::DDS::ReturnCode_t read_next_instance_w_condition (
        ::FACE::DM::Nav_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t take_next_instance_w_condition (
        ::FACE::DM::Nav_DataSeq & data_values,
        ::DDS::SampleInfoSeq & sample_infos,
        ::CORBA::Long max_samples,
        ::DDS::InstanceHandle_t previous_handle,
        ::DDS::ReadCondition_ptr a_condition) = 0;

      virtual ::DDS::ReturnCode_t return_loan (
        ::FACE::DM::Nav_DataSeq & received_data,
        ::DDS::SampleInfoSeq & info_seq) = 0;

      virtual ::DDS::ReturnCode_t get_key_value (
        ::FACE::DM::Nav_Data & key_holder,
        ::DDS::InstanceHandle_t handle) = 0;

      virtual ::DDS::InstanceHandle_t lookup_instance (
        const ::FACE::DM::Nav_Data & instance_data) = 0;

      // TAO_IDL - Generated from
      // be/be_visitor_interface/interface_ch.cpp:140

      virtual ::CORBA::Boolean _is_a (const char *type_id);
      virtual const char* _interface_repository_id (void) const;
      virtual ::CORBA::Boolean marshal (TAO_OutputCDR &cdr);
    
    protected:
      // Abstract or local interface only.
      Nav_DataDataReader (void);

      

      virtual ~Nav_DataDataReader (void);
    
    private:
      // Private and unimplemented for concrete interfaces.
      Nav_DataDataReader (const Nav_DataDataReader &);

      void operator= (const Nav_DataDataReader &);
    };
  
  // TAO_IDL - Generated from
  // be/be_visitor_module/module_ch.cpp:67
  
  } // module FACE::DM

// TAO_IDL - Generated from
// be/be_visitor_module/module_ch.cpp:67

} // module FACE

// TAO_IDL - Generated from
// be/be_visitor_arg_traits.cpp:68

TAO_BEGIN_VERSIONED_NAMESPACE_DECL


// Arg traits specializations.
namespace TAO
{
}

TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_traits.cpp:62

TAO_BEGIN_VERSIONED_NAMESPACE_DECL

// Traits specializations.
namespace TAO
{

#if !defined (_FACE_DM_EGI_DATATYPESUPPORT__TRAITS_)
#define _FACE_DM_EGI_DATATYPESUPPORT__TRAITS_

  template<>
  struct SampleModel_Export Objref_Traits< ::FACE::DM::EGI_DataTypeSupport>
  {
    static ::FACE::DM::EGI_DataTypeSupport_ptr duplicate (
        ::FACE::DM::EGI_DataTypeSupport_ptr p);
    static void release (
        ::FACE::DM::EGI_DataTypeSupport_ptr p);
    static ::FACE::DM::EGI_DataTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FACE::DM::EGI_DataTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_FACE_DM_EGI_DATADATAWRITER__TRAITS_)
#define _FACE_DM_EGI_DATADATAWRITER__TRAITS_

  template<>
  struct SampleModel_Export Objref_Traits< ::FACE::DM::EGI_DataDataWriter>
  {
    static ::FACE::DM::EGI_DataDataWriter_ptr duplicate (
        ::FACE::DM::EGI_DataDataWriter_ptr p);
    static void release (
        ::FACE::DM::EGI_DataDataWriter_ptr p);
    static ::FACE::DM::EGI_DataDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FACE::DM::EGI_DataDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_FACE_DM_EGI_DATADATAREADER__TRAITS_)
#define _FACE_DM_EGI_DATADATAREADER__TRAITS_

  template<>
  struct SampleModel_Export Objref_Traits< ::FACE::DM::EGI_DataDataReader>
  {
    static ::FACE::DM::EGI_DataDataReader_ptr duplicate (
        ::FACE::DM::EGI_DataDataReader_ptr p);
    static void release (
        ::FACE::DM::EGI_DataDataReader_ptr p);
    static ::FACE::DM::EGI_DataDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FACE::DM::EGI_DataDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_FACE_DM_IMU_DATATYPESUPPORT__TRAITS_)
#define _FACE_DM_IMU_DATATYPESUPPORT__TRAITS_

  template<>
  struct SampleModel_Export Objref_Traits< ::FACE::DM::IMU_DataTypeSupport>
  {
    static ::FACE::DM::IMU_DataTypeSupport_ptr duplicate (
        ::FACE::DM::IMU_DataTypeSupport_ptr p);
    static void release (
        ::FACE::DM::IMU_DataTypeSupport_ptr p);
    static ::FACE::DM::IMU_DataTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FACE::DM::IMU_DataTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_FACE_DM_IMU_DATADATAWRITER__TRAITS_)
#define _FACE_DM_IMU_DATADATAWRITER__TRAITS_

  template<>
  struct SampleModel_Export Objref_Traits< ::FACE::DM::IMU_DataDataWriter>
  {
    static ::FACE::DM::IMU_DataDataWriter_ptr duplicate (
        ::FACE::DM::IMU_DataDataWriter_ptr p);
    static void release (
        ::FACE::DM::IMU_DataDataWriter_ptr p);
    static ::FACE::DM::IMU_DataDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FACE::DM::IMU_DataDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_FACE_DM_IMU_DATADATAREADER__TRAITS_)
#define _FACE_DM_IMU_DATADATAREADER__TRAITS_

  template<>
  struct SampleModel_Export Objref_Traits< ::FACE::DM::IMU_DataDataReader>
  {
    static ::FACE::DM::IMU_DataDataReader_ptr duplicate (
        ::FACE::DM::IMU_DataDataReader_ptr p);
    static void release (
        ::FACE::DM::IMU_DataDataReader_ptr p);
    static ::FACE::DM::IMU_DataDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FACE::DM::IMU_DataDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_FACE_DM_NAV_DATATYPESUPPORT__TRAITS_)
#define _FACE_DM_NAV_DATATYPESUPPORT__TRAITS_

  template<>
  struct SampleModel_Export Objref_Traits< ::FACE::DM::Nav_DataTypeSupport>
  {
    static ::FACE::DM::Nav_DataTypeSupport_ptr duplicate (
        ::FACE::DM::Nav_DataTypeSupport_ptr p);
    static void release (
        ::FACE::DM::Nav_DataTypeSupport_ptr p);
    static ::FACE::DM::Nav_DataTypeSupport_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FACE::DM::Nav_DataTypeSupport_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_FACE_DM_NAV_DATADATAWRITER__TRAITS_)
#define _FACE_DM_NAV_DATADATAWRITER__TRAITS_

  template<>
  struct SampleModel_Export Objref_Traits< ::FACE::DM::Nav_DataDataWriter>
  {
    static ::FACE::DM::Nav_DataDataWriter_ptr duplicate (
        ::FACE::DM::Nav_DataDataWriter_ptr p);
    static void release (
        ::FACE::DM::Nav_DataDataWriter_ptr p);
    static ::FACE::DM::Nav_DataDataWriter_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FACE::DM::Nav_DataDataWriter_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */

#if !defined (_FACE_DM_NAV_DATADATAREADER__TRAITS_)
#define _FACE_DM_NAV_DATADATAREADER__TRAITS_

  template<>
  struct SampleModel_Export Objref_Traits< ::FACE::DM::Nav_DataDataReader>
  {
    static ::FACE::DM::Nav_DataDataReader_ptr duplicate (
        ::FACE::DM::Nav_DataDataReader_ptr p);
    static void release (
        ::FACE::DM::Nav_DataDataReader_ptr p);
    static ::FACE::DM::Nav_DataDataReader_ptr nil (void);
    static ::CORBA::Boolean marshal (
        const ::FACE::DM::Nav_DataDataReader_ptr p,
        TAO_OutputCDR & cdr);
  };

#endif /* end #if !defined */
}
TAO_END_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_codegen.cpp:1703
#if defined (__ACE_INLINE__)
#include "SampleModelTypeSupportC.inl"
#endif /* defined INLINE */

#include /**/ "ace/post.h"

#endif /* ifndef */

