// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376


#include "FileInfoTypeSupportC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "FileInfoTypeSupportC.inl"
#endif /* !defined INLINE */

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DistributedContent::FileDiffTypeSupport.

DistributedContent::FileDiffTypeSupport_ptr
TAO::Objref_Traits<DistributedContent::FileDiffTypeSupport>::duplicate (
    DistributedContent::FileDiffTypeSupport_ptr p)
{
  return DistributedContent::FileDiffTypeSupport::_duplicate (p);
}

void
TAO::Objref_Traits<DistributedContent::FileDiffTypeSupport>::release (
    DistributedContent::FileDiffTypeSupport_ptr p)
{
  ::CORBA::release (p);
}

DistributedContent::FileDiffTypeSupport_ptr
TAO::Objref_Traits<DistributedContent::FileDiffTypeSupport>::nil (void)
{
  return DistributedContent::FileDiffTypeSupport::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DistributedContent::FileDiffTypeSupport>::marshal (
    const DistributedContent::FileDiffTypeSupport_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DistributedContent::FileDiffTypeSupport::FileDiffTypeSupport (void)
{}

DistributedContent::FileDiffTypeSupport::~FileDiffTypeSupport (void)
{
}

DistributedContent::FileDiffTypeSupport_ptr
DistributedContent::FileDiffTypeSupport::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return FileDiffTypeSupport::_duplicate (
      dynamic_cast<FileDiffTypeSupport_ptr> (_tao_objref)
    );
}

DistributedContent::FileDiffTypeSupport_ptr
DistributedContent::FileDiffTypeSupport::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return FileDiffTypeSupport::_duplicate (
      dynamic_cast<FileDiffTypeSupport_ptr> (_tao_objref)
    );
}

DistributedContent::FileDiffTypeSupport_ptr
DistributedContent::FileDiffTypeSupport::_nil (void)
{
  return 0;
}

DistributedContent::FileDiffTypeSupport_ptr
DistributedContent::FileDiffTypeSupport::_duplicate (FileDiffTypeSupport_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DistributedContent::FileDiffTypeSupport::_tao_release (FileDiffTypeSupport_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DistributedContent::FileDiffTypeSupport::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/TypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DistributedContent/FileDiffTypeSupport:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DistributedContent::FileDiffTypeSupport::_interface_repository_id (void) const
{
  return "IDL:DistributedContent/FileDiffTypeSupport:1.0";
}

::CORBA::Boolean
DistributedContent::FileDiffTypeSupport::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DistributedContent::FileDiffDataWriter.

DistributedContent::FileDiffDataWriter_ptr
TAO::Objref_Traits<DistributedContent::FileDiffDataWriter>::duplicate (
    DistributedContent::FileDiffDataWriter_ptr p)
{
  return DistributedContent::FileDiffDataWriter::_duplicate (p);
}

void
TAO::Objref_Traits<DistributedContent::FileDiffDataWriter>::release (
    DistributedContent::FileDiffDataWriter_ptr p)
{
  ::CORBA::release (p);
}

DistributedContent::FileDiffDataWriter_ptr
TAO::Objref_Traits<DistributedContent::FileDiffDataWriter>::nil (void)
{
  return DistributedContent::FileDiffDataWriter::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DistributedContent::FileDiffDataWriter>::marshal (
    const DistributedContent::FileDiffDataWriter_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DistributedContent::FileDiffDataWriter::FileDiffDataWriter (void)
{}

DistributedContent::FileDiffDataWriter::~FileDiffDataWriter (void)
{
}

DistributedContent::FileDiffDataWriter_ptr
DistributedContent::FileDiffDataWriter::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return FileDiffDataWriter::_duplicate (
      dynamic_cast<FileDiffDataWriter_ptr> (_tao_objref)
    );
}

DistributedContent::FileDiffDataWriter_ptr
DistributedContent::FileDiffDataWriter::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return FileDiffDataWriter::_duplicate (
      dynamic_cast<FileDiffDataWriter_ptr> (_tao_objref)
    );
}

DistributedContent::FileDiffDataWriter_ptr
DistributedContent::FileDiffDataWriter::_nil (void)
{
  return 0;
}

DistributedContent::FileDiffDataWriter_ptr
DistributedContent::FileDiffDataWriter::_duplicate (FileDiffDataWriter_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DistributedContent::FileDiffDataWriter::_tao_release (FileDiffDataWriter_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DistributedContent::FileDiffDataWriter::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DistributedContent/FileDiffDataWriter:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DistributedContent::FileDiffDataWriter::_interface_repository_id (void) const
{
  return "IDL:DistributedContent/FileDiffDataWriter:1.0";
}

::CORBA::Boolean
DistributedContent::FileDiffDataWriter::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DistributedContent::FileDiffDataReader.

DistributedContent::FileDiffDataReader_ptr
TAO::Objref_Traits<DistributedContent::FileDiffDataReader>::duplicate (
    DistributedContent::FileDiffDataReader_ptr p)
{
  return DistributedContent::FileDiffDataReader::_duplicate (p);
}

void
TAO::Objref_Traits<DistributedContent::FileDiffDataReader>::release (
    DistributedContent::FileDiffDataReader_ptr p)
{
  ::CORBA::release (p);
}

DistributedContent::FileDiffDataReader_ptr
TAO::Objref_Traits<DistributedContent::FileDiffDataReader>::nil (void)
{
  return DistributedContent::FileDiffDataReader::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DistributedContent::FileDiffDataReader>::marshal (
    const DistributedContent::FileDiffDataReader_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DistributedContent::FileDiffDataReader::FileDiffDataReader (void)
{}

DistributedContent::FileDiffDataReader::~FileDiffDataReader (void)
{
}

DistributedContent::FileDiffDataReader_ptr
DistributedContent::FileDiffDataReader::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return FileDiffDataReader::_duplicate (
      dynamic_cast<FileDiffDataReader_ptr> (_tao_objref)
    );
}

DistributedContent::FileDiffDataReader_ptr
DistributedContent::FileDiffDataReader::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return FileDiffDataReader::_duplicate (
      dynamic_cast<FileDiffDataReader_ptr> (_tao_objref)
    );
}

DistributedContent::FileDiffDataReader_ptr
DistributedContent::FileDiffDataReader::_nil (void)
{
  return 0;
}

DistributedContent::FileDiffDataReader_ptr
DistributedContent::FileDiffDataReader::_duplicate (FileDiffDataReader_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DistributedContent::FileDiffDataReader::_tao_release (FileDiffDataReader_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DistributedContent::FileDiffDataReader::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/DataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:OpenDDS/DCPS/DataReaderEx:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DistributedContent/FileDiffDataReader:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DistributedContent::FileDiffDataReader::_interface_repository_id (void) const
{
  return "IDL:DistributedContent/FileDiffDataReader:1.0";
}

::CORBA::Boolean
DistributedContent::FileDiffDataReader::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

