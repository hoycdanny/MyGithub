// -*- C++ -*-
// $Id$

/**
 * Code generated by the The ACE ORB (TAO) IDL Compiler v2.2a_p11
 * TAO and the TAO IDL Compiler have been developed by:
 *       Center for Distributed Object Computing
 *       Washington University
 *       St. Louis, MO
 *       USA
 *       http://www.cs.wustl.edu/~schmidt/doc-center.html
 * and
 *       Distributed Object Computing Laboratory
 *       University of California at Irvine
 *       Irvine, CA
 *       USA
 * and
 *       Institute for Software Integrated Systems
 *       Vanderbilt University
 *       Nashville, TN
 *       USA
 *       http://www.isis.vanderbilt.edu/
 *
 * Information about TAO is available at:
 *     http://www.cs.wustl.edu/~schmidt/TAO.html
 **/

// TAO_IDL - Generated from
// be/be_codegen.cpp:376

#include "DCPS/DdsDcps_pch.h"
#include "DdsDcpsInfrastructureC.h"
#include "tao/CDR.h"
#include "ace/OS_NS_string.h"

#if !defined (__ACE_INLINE__)
#include "DdsDcpsInfrastructureC.inl"
#endif /* !defined INLINE */

OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL



// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::Listener.

DDS::Listener_ptr
TAO::Objref_Traits<DDS::Listener>::duplicate (
    DDS::Listener_ptr p)
{
  return DDS::Listener::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::Listener>::release (
    DDS::Listener_ptr p)
{
  ::CORBA::release (p);
}

DDS::Listener_ptr
TAO::Objref_Traits<DDS::Listener>::nil (void)
{
  return DDS::Listener::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::Listener>::marshal (
    const DDS::Listener_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::Listener::Listener (void)
{}

DDS::Listener::~Listener (void)
{
}

DDS::Listener_ptr
DDS::Listener::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return Listener::_duplicate (
      dynamic_cast<Listener_ptr> (_tao_objref)
    );
}

DDS::Listener_ptr
DDS::Listener::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return Listener::_duplicate (
      dynamic_cast<Listener_ptr> (_tao_objref)
    );
}

DDS::Listener_ptr
DDS::Listener::_nil (void)
{
  return 0;
}

DDS::Listener_ptr
DDS::Listener::_duplicate (Listener_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::Listener::_tao_release (Listener_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::Listener::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Listener:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::Listener::_interface_repository_id (void) const
{
  return "IDL:DDS/Listener:1.0";
}

::CORBA::Boolean
DDS::Listener::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::Condition.

DDS::Condition_ptr
TAO::Objref_Traits<DDS::Condition>::duplicate (
    DDS::Condition_ptr p)
{
  return DDS::Condition::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::Condition>::release (
    DDS::Condition_ptr p)
{
  ::CORBA::release (p);
}

DDS::Condition_ptr
TAO::Objref_Traits<DDS::Condition>::nil (void)
{
  return DDS::Condition::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::Condition>::marshal (
    const DDS::Condition_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::Condition::Condition (void)
{}

DDS::Condition::~Condition (void)
{
}

DDS::Condition_ptr
DDS::Condition::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return Condition::_duplicate (
      dynamic_cast<Condition_ptr> (_tao_objref)
    );
}

DDS::Condition_ptr
DDS::Condition::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return Condition::_duplicate (
      dynamic_cast<Condition_ptr> (_tao_objref)
    );
}

DDS::Condition_ptr
DDS::Condition::_nil (void)
{
  return 0;
}

DDS::Condition_ptr
DDS::Condition::_duplicate (Condition_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::Condition::_tao_release (Condition_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::Condition::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Condition:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::Condition::_interface_repository_id (void) const
{
  return "IDL:DDS/Condition:1.0";
}

::CORBA::Boolean
DDS::Condition::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::WaitSetInterf.

DDS::WaitSetInterf_ptr
TAO::Objref_Traits<DDS::WaitSetInterf>::duplicate (
    DDS::WaitSetInterf_ptr p)
{
  return DDS::WaitSetInterf::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::WaitSetInterf>::release (
    DDS::WaitSetInterf_ptr p)
{
  ::CORBA::release (p);
}

DDS::WaitSetInterf_ptr
TAO::Objref_Traits<DDS::WaitSetInterf>::nil (void)
{
  return DDS::WaitSetInterf::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::WaitSetInterf>::marshal (
    const DDS::WaitSetInterf_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::WaitSetInterf::WaitSetInterf (void)
{}

DDS::WaitSetInterf::~WaitSetInterf (void)
{
}

DDS::WaitSetInterf_ptr
DDS::WaitSetInterf::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return WaitSetInterf::_duplicate (
      dynamic_cast<WaitSetInterf_ptr> (_tao_objref)
    );
}

DDS::WaitSetInterf_ptr
DDS::WaitSetInterf::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return WaitSetInterf::_duplicate (
      dynamic_cast<WaitSetInterf_ptr> (_tao_objref)
    );
}

DDS::WaitSetInterf_ptr
DDS::WaitSetInterf::_nil (void)
{
  return 0;
}

DDS::WaitSetInterf_ptr
DDS::WaitSetInterf::_duplicate (WaitSetInterf_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::WaitSetInterf::_tao_release (WaitSetInterf_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::WaitSetInterf::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/WaitSetInterf:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::WaitSetInterf::_interface_repository_id (void) const
{
  return "IDL:DDS/WaitSetInterf:1.0";
}

::CORBA::Boolean
DDS::WaitSetInterf::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::GuardConditionInterf.

DDS::GuardConditionInterf_ptr
TAO::Objref_Traits<DDS::GuardConditionInterf>::duplicate (
    DDS::GuardConditionInterf_ptr p)
{
  return DDS::GuardConditionInterf::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::GuardConditionInterf>::release (
    DDS::GuardConditionInterf_ptr p)
{
  ::CORBA::release (p);
}

DDS::GuardConditionInterf_ptr
TAO::Objref_Traits<DDS::GuardConditionInterf>::nil (void)
{
  return DDS::GuardConditionInterf::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::GuardConditionInterf>::marshal (
    const DDS::GuardConditionInterf_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::GuardConditionInterf::GuardConditionInterf (void)
{}

DDS::GuardConditionInterf::~GuardConditionInterf (void)
{
}

DDS::GuardConditionInterf_ptr
DDS::GuardConditionInterf::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return GuardConditionInterf::_duplicate (
      dynamic_cast<GuardConditionInterf_ptr> (_tao_objref)
    );
}

DDS::GuardConditionInterf_ptr
DDS::GuardConditionInterf::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return GuardConditionInterf::_duplicate (
      dynamic_cast<GuardConditionInterf_ptr> (_tao_objref)
    );
}

DDS::GuardConditionInterf_ptr
DDS::GuardConditionInterf::_nil (void)
{
  return 0;
}

DDS::GuardConditionInterf_ptr
DDS::GuardConditionInterf::_duplicate (GuardConditionInterf_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::GuardConditionInterf::_tao_release (GuardConditionInterf_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::GuardConditionInterf::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Condition:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/GuardConditionInterf:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::GuardConditionInterf::_interface_repository_id (void) const
{
  return "IDL:DDS/GuardConditionInterf:1.0";
}

::CORBA::Boolean
DDS::GuardConditionInterf::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::StatusCondition.

DDS::StatusCondition_ptr
TAO::Objref_Traits<DDS::StatusCondition>::duplicate (
    DDS::StatusCondition_ptr p)
{
  return DDS::StatusCondition::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::StatusCondition>::release (
    DDS::StatusCondition_ptr p)
{
  ::CORBA::release (p);
}

DDS::StatusCondition_ptr
TAO::Objref_Traits<DDS::StatusCondition>::nil (void)
{
  return DDS::StatusCondition::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::StatusCondition>::marshal (
    const DDS::StatusCondition_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::StatusCondition::StatusCondition (void)
{}

DDS::StatusCondition::~StatusCondition (void)
{
}

DDS::StatusCondition_ptr
DDS::StatusCondition::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return StatusCondition::_duplicate (
      dynamic_cast<StatusCondition_ptr> (_tao_objref)
    );
}

DDS::StatusCondition_ptr
DDS::StatusCondition::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return StatusCondition::_duplicate (
      dynamic_cast<StatusCondition_ptr> (_tao_objref)
    );
}

DDS::StatusCondition_ptr
DDS::StatusCondition::_nil (void)
{
  return 0;
}

DDS::StatusCondition_ptr
DDS::StatusCondition::_duplicate (StatusCondition_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::StatusCondition::_tao_release (StatusCondition_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::StatusCondition::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Condition:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:DDS/StatusCondition:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::StatusCondition::_interface_repository_id (void) const
{
  return "IDL:DDS/StatusCondition:1.0";
}

::CORBA::Boolean
DDS::StatusCondition::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_interface/interface_cs.cpp:51

// Traits specializations for DDS::Entity.

DDS::Entity_ptr
TAO::Objref_Traits<DDS::Entity>::duplicate (
    DDS::Entity_ptr p)
{
  return DDS::Entity::_duplicate (p);
}

void
TAO::Objref_Traits<DDS::Entity>::release (
    DDS::Entity_ptr p)
{
  ::CORBA::release (p);
}

DDS::Entity_ptr
TAO::Objref_Traits<DDS::Entity>::nil (void)
{
  return DDS::Entity::_nil ();
}

::CORBA::Boolean
TAO::Objref_Traits<DDS::Entity>::marshal (
    const DDS::Entity_ptr p,
    TAO_OutputCDR & cdr)
{
  return ::CORBA::Object::marshal (p, cdr);
}

DDS::Entity::Entity (void)
{}

DDS::Entity::~Entity (void)
{
}

DDS::Entity_ptr
DDS::Entity::_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return Entity::_duplicate (
      dynamic_cast<Entity_ptr> (_tao_objref)
    );
}

DDS::Entity_ptr
DDS::Entity::_unchecked_narrow (
    ::CORBA::Object_ptr _tao_objref)
{
  return Entity::_duplicate (
      dynamic_cast<Entity_ptr> (_tao_objref)
    );
}

DDS::Entity_ptr
DDS::Entity::_nil (void)
{
  return 0;
}

DDS::Entity_ptr
DDS::Entity::_duplicate (Entity_ptr obj)
{
  if (! ::CORBA::is_nil (obj))
    {
      obj->_add_ref ();
    }
  return obj;
}

void
DDS::Entity::_tao_release (Entity_ptr obj)
{
  ::CORBA::release (obj);
}

::CORBA::Boolean
DDS::Entity::_is_a (const char *value)
{
  if (
      ACE_OS::strcmp (
          value,
          "IDL:DDS/Entity:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/LocalObject:1.0"
        ) == 0 ||
      ACE_OS::strcmp (
          value,
          "IDL:omg.org/CORBA/Object:1.0"
        ) == 0
    )
    {
      return true; // success using local knowledge
    }
  else
    {
      return false;
    }
}

const char* DDS::Entity::_interface_repository_id (void) const
{
  return "IDL:DDS/Entity:1.0";
}

::CORBA::Boolean
DDS::Entity::marshal (TAO_OutputCDR & /* cdr */)
{
  return false;
}

// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::InconsistentTopicStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::InconsistentTopicStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::SampleLostStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::SampleLostStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_enum/cdr_op_cs.cpp:37



OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (TAO_OutputCDR &strm, DDS::SampleRejectedStatusKind _tao_enumerator)
{
  return strm << static_cast< ::CORBA::ULong> (_tao_enumerator);
}

::CORBA::Boolean operator>> (TAO_InputCDR &strm, DDS::SampleRejectedStatusKind & _tao_enumerator)
{
  ::CORBA::ULong _tao_temp = 0;
  ::CORBA::Boolean const _tao_success = strm >> _tao_temp;
  
  if (_tao_success)
    {
      _tao_enumerator = static_cast<DDS::SampleRejectedStatusKind> (_tao_temp);
    }
  
  return _tao_success;
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::SampleRejectedStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change) &&
    (strm << _tao_aggregate.last_reason) &&
    (strm << _tao_aggregate.last_instance_handle);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::SampleRejectedStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change) &&
    (strm >> _tao_aggregate.last_reason) &&
    (strm >> _tao_aggregate.last_instance_handle);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::LivelinessLostStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::LivelinessLostStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::LivelinessChangedStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.alive_count) &&
    (strm << _tao_aggregate.not_alive_count) &&
    (strm << _tao_aggregate.alive_count_change) &&
    (strm << _tao_aggregate.not_alive_count_change) &&
    (strm << _tao_aggregate.last_publication_handle);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::LivelinessChangedStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.alive_count) &&
    (strm >> _tao_aggregate.not_alive_count) &&
    (strm >> _tao_aggregate.alive_count_change) &&
    (strm >> _tao_aggregate.not_alive_count_change) &&
    (strm >> _tao_aggregate.last_publication_handle);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::OfferedDeadlineMissedStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change) &&
    (strm << _tao_aggregate.last_instance_handle);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::OfferedDeadlineMissedStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change) &&
    (strm >> _tao_aggregate.last_instance_handle);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::RequestedDeadlineMissedStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change) &&
    (strm << _tao_aggregate.last_instance_handle);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::RequestedDeadlineMissedStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change) &&
    (strm >> _tao_aggregate.last_instance_handle);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::OfferedIncompatibleQosStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change) &&
    (strm << _tao_aggregate.last_policy_id) &&
    (strm << _tao_aggregate.policies);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::OfferedIncompatibleQosStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change) &&
    (strm >> _tao_aggregate.last_policy_id) &&
    (strm >> _tao_aggregate.policies);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::RequestedIncompatibleQosStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change) &&
    (strm << _tao_aggregate.last_policy_id) &&
    (strm << _tao_aggregate.policies);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::RequestedIncompatibleQosStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change) &&
    (strm >> _tao_aggregate.last_policy_id) &&
    (strm >> _tao_aggregate.policies);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::PublicationMatchedStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change) &&
    (strm << _tao_aggregate.current_count) &&
    (strm << _tao_aggregate.current_count_change) &&
    (strm << _tao_aggregate.last_subscription_handle);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::PublicationMatchedStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change) &&
    (strm >> _tao_aggregate.current_count) &&
    (strm >> _tao_aggregate.current_count_change) &&
    (strm >> _tao_aggregate.last_subscription_handle);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL




// TAO_IDL - Generated from
// be/be_visitor_structure/cdr_op_cs.cpp:52


OPENDDS_END_VERSIONED_NAMESPACE_DECL


TAO_BEGIN_VERSIONED_NAMESPACE_DECL

::CORBA::Boolean operator<< (
    TAO_OutputCDR &strm,
    const DDS::SubscriptionMatchedStatus &_tao_aggregate)
{
  return
    (strm << _tao_aggregate.total_count) &&
    (strm << _tao_aggregate.total_count_change) &&
    (strm << _tao_aggregate.current_count) &&
    (strm << _tao_aggregate.current_count_change) &&
    (strm << _tao_aggregate.last_publication_handle);
}

::CORBA::Boolean operator>> (
    TAO_InputCDR &strm,
    DDS::SubscriptionMatchedStatus &_tao_aggregate)
{
  return
    (strm >> _tao_aggregate.total_count) &&
    (strm >> _tao_aggregate.total_count_change) &&
    (strm >> _tao_aggregate.current_count) &&
    (strm >> _tao_aggregate.current_count_change) &&
    (strm >> _tao_aggregate.last_publication_handle);
}

TAO_END_VERSIONED_NAMESPACE_DECL


OPENDDS_BEGIN_VERSIONED_NAMESPACE_DECL





OPENDDS_END_VERSIONED_NAMESPACE_DECL


